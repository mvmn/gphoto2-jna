package x.mvmn.gphoto2.jna;
import com.ochafik.lang.jnaerator.runtime.NativeSize;
import com.ochafik.lang.jnaerator.runtime.NativeSizeByReference;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.FloatByReference;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.LongByReference;
import com.sun.jna.ptr.PointerByReference;
import java.nio.ByteBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>gphoto2</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Gphoto2Library extends Library {
	public static final String JNA_LIBRARY_NAME = "gphoto2";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Gphoto2Library.JNA_LIBRARY_NAME);
	public static final Gphoto2Library INSTANCE = (Gphoto2Library)Native.load(Gphoto2Library.JNA_LIBRARY_NAME, Gphoto2Library.class);
	/**
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h</i><br>
	 * enum values
	 */
	public static interface GPPortType {
		/**
		 * < \brief No specific type associated.<br>
		 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:35</i>
		 */
		public static final int GP_PORT_NONE = 0;
		/**
		 * < \brief Serial port.<br>
		 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:36</i>
		 */
		public static final int GP_PORT_SERIAL = 1 << 0;
		/**
		 * < \brief USB port.<br>
		 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:37</i>
		 */
		public static final int GP_PORT_USB = 1 << 2;
		/**
		 * < \brief Disk / local mountpoint port.<br>
		 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:38</i>
		 */
		public static final int GP_PORT_DISK = 1 << 3;
		/**
		 * < \brief PTP/IP port.<br>
		 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:39</i>
		 */
		public static final int GP_PORT_PTPIP = 1 << 4;
		/**
		 * < \brief Direct IO to an usb mass storage device.<br>
		 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:40</i>
		 */
		public static final int GP_PORT_USB_DISK_DIRECT = 1 << 5;
		/**
		 * < \brief USB Mass Storage raw SCSI port.<br>
		 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:41</i>
		 */
		public static final int GP_PORT_USB_SCSI = 1 << 6;
		/**
		 * < \brief generic IP address port.<br>
		 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:42</i>
		 */
		public static final int GP_PORT_IP = 1 << 7;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-port.h</i><br>
	 * enum values
	 */
	public static interface GPPortSerialParity {
		/**
		 * < \brief Parity is off (disabled)<br>
		 * <i>native declaration : gphoto2/gphoto2-port.h:50</i>
		 */
		public static final int GP_PORT_SERIAL_PARITY_OFF = 0;
		/**
		 * < \brief Parity is even.<br>
		 * <i>native declaration : gphoto2/gphoto2-port.h:51</i>
		 */
		public static final int GP_PORT_SERIAL_PARITY_EVEN = 1;
		/**
		 * < \brief Parity is odd.<br>
		 * <i>native declaration : gphoto2/gphoto2-port.h:52</i>
		 */
		public static final int GP_PORT_SERIAL_PARITY_ODD = 2;
	};
	/** < \brief USB bulk IN ep */
	public static final int GP_PORT_USB_ENDPOINT_IN = 0;
	/** < \brief USB bulk OUT ep */
	public static final int GP_PORT_USB_ENDPOINT_OUT = 1;
	/** < \brief USB Interrupt ep */
	public static final int GP_PORT_USB_ENDPOINT_INT = 2;
	/**
	 * <i>native declaration : gphoto2/gphoto2-port.h</i><br>
	 * enum values
	 */
	public static interface GPPin {
		/**
		 * < \brief RTS line<br>
		 * <i>native declaration : gphoto2/gphoto2-port.h:180</i>
		 */
		public static final int GP_PIN_RTS = 0;
		/**
		 * < \brief DTR line<br>
		 * <i>native declaration : gphoto2/gphoto2-port.h:181</i>
		 */
		public static final int GP_PIN_DTR = 1;
		/**
		 * < \brief CTS line<br>
		 * <i>native declaration : gphoto2/gphoto2-port.h:182</i>
		 */
		public static final int GP_PIN_CTS = 2;
		/**
		 * < \brief DSR line<br>
		 * <i>native declaration : gphoto2/gphoto2-port.h:183</i>
		 */
		public static final int GP_PIN_DSR = 3;
		/**
		 * < \brief Carrier Detect line<br>
		 * <i>native declaration : gphoto2/gphoto2-port.h:184</i>
		 */
		public static final int GP_PIN_CD = 4;
		/**
		 * < \brief RING (Modem) line<br>
		 * <i>native declaration : gphoto2/gphoto2-port.h:185</i>
		 */
		public static final int GP_PIN_RING = 5;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-port.h</i><br>
	 * enum values
	 */
	public static interface GPLevel {
		/**
		 * < \brief Pull to low (0V)<br>
		 * <i>native declaration : gphoto2/gphoto2-port.h:194</i>
		 */
		public static final int GP_LEVEL_LOW = 0;
		/**
		 * < \brief Pull to high (nV)<br>
		 * <i>native declaration : gphoto2/gphoto2-port.h:195</i>
		 */
		public static final int GP_LEVEL_HIGH = 1;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-port-log.h</i><br>
	 * enum values
	 */
	public static interface GPLogLevel {
		/**
		 * < \brief Log message is an error information.<br>
		 * <i>native declaration : gphoto2/gphoto2-port-log.h:11</i>
		 */
		public static final int GP_LOG_ERROR = 0;
		/**
		 * < \brief Log message is an verbose debug information.<br>
		 * <i>native declaration : gphoto2/gphoto2-port-log.h:12</i>
		 */
		public static final int GP_LOG_VERBOSE = 1;
		/**
		 * < \brief Log message is an debug information.<br>
		 * <i>native declaration : gphoto2/gphoto2-port-log.h:13</i>
		 */
		public static final int GP_LOG_DEBUG = 2;
		/**
		 * < \brief Log message is a data hex dump.<br>
		 * <i>native declaration : gphoto2/gphoto2-port-log.h:14</i>
		 */
		public static final int GP_LOG_DATA = 3;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-file.h</i><br>
	 * enum values
	 */
	public static interface CameraFileType {
		/**
		 * < A preview of an image.<br>
		 * <i>native declaration : gphoto2/gphoto2-file.h:44</i>
		 */
		public static final int GP_FILE_TYPE_PREVIEW = 0;
		/**
		 * < The regular normal data of a file.<br>
		 * <i>native declaration : gphoto2/gphoto2-file.h:45</i>
		 */
		public static final int GP_FILE_TYPE_NORMAL = 1;
		/**
		 * < The raw mode of a file, for instance the raw bayer data for cameras<br>
		 * where postprocessing is done in the driver. The RAW files of modern<br>
		 * DSLRs are GP_FILE_TYPE_NORMAL usually.<br>
		 * <i>native declaration : gphoto2/gphoto2-file.h:46</i>
		 */
		public static final int GP_FILE_TYPE_RAW = 2;
		/**
		 * < The audio view of a file. Perhaps an embedded comment or similar.<br>
		 * <i>native declaration : gphoto2/gphoto2-file.h:49</i>
		 */
		public static final int GP_FILE_TYPE_AUDIO = 3;
		/**
		 * < The embedded EXIF data of an image.<br>
		 * <i>native declaration : gphoto2/gphoto2-file.h:50</i>
		 */
		public static final int GP_FILE_TYPE_EXIF = 4;
		/**
		 * < The metadata of a file, like Metadata of files on MTP devices.<br>
		 * <i>native declaration : gphoto2/gphoto2-file.h:51</i>
		 */
		public static final int GP_FILE_TYPE_METADATA = 5;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-file.h</i><br>
	 * enum values
	 */
	public static interface CameraFileAccessType {
		/**
		 * < File is in system memory.<br>
		 * <i>native declaration : gphoto2/gphoto2-file.h:61</i>
		 */
		public static final int GP_FILE_ACCESSTYPE_MEMORY = 0;
		/**
		 * < File is associated with a UNIX filedescriptor.<br>
		 * <i>native declaration : gphoto2/gphoto2-file.h:62</i>
		 */
		public static final int GP_FILE_ACCESSTYPE_FD = 1;
		/**
		 * < File is associated with a programmatic handler.<br>
		 * <i>native declaration : gphoto2/gphoto2-file.h:63</i>
		 */
		public static final int GP_FILE_ACCESSTYPE_HANDLER = 2;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-context.h</i><br>
	 * enum values
	 */
	public static interface GPContextFeedback {
		/**
		 * < Everything ok... proceed.<br>
		 * <i>native declaration : gphoto2/gphoto2-context.h:28</i>
		 */
		public static final int GP_CONTEXT_FEEDBACK_OK = 0;
		/**
		 * < Please cancel the current transfer if possible.<br>
		 * <i>native declaration : gphoto2/gphoto2-context.h:29</i>
		 */
		public static final int GP_CONTEXT_FEEDBACK_CANCEL = 1;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h</i><br>
	 * enum values
	 */
	public static interface CameraDriverStatus {
		/**
		 * < Driver is production ready.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:10</i>
		 */
		public static final int GP_DRIVER_STATUS_PRODUCTION = 0;
		/**
		 * < Driver is beta quality.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:11</i>
		 */
		public static final int GP_DRIVER_STATUS_TESTING = 1;
		/**
		 * < Driver is alpha quality and might even not work.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:12</i>
		 */
		public static final int GP_DRIVER_STATUS_EXPERIMENTAL = 2;
		/**
		 * < Driver is no longer recommended to use and will be removed.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:13</i>
		 */
		public static final int GP_DRIVER_STATUS_DEPRECATED = 3;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h</i><br>
	 * enum values
	 */
	public static interface GphotoDeviceType {
		/**
		 * < Traditional still camera<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:21</i>
		 */
		public static final int GP_DEVICE_STILL_CAMERA = 0;
		/**
		 * < Audio player<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:22</i>
		 */
		public static final int GP_DEVICE_AUDIO_PLAYER = 1 << 0;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h</i><br>
	 * enum values
	 */
	public static interface CameraOperation {
		/**
		 * < No remote control operation supported.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:30</i>
		 */
		public static final int GP_OPERATION_NONE = 0;
		/**
		 * < Capturing images supported.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:31</i>
		 */
		public static final int GP_OPERATION_CAPTURE_IMAGE = 1 << 0;
		/**
		 * < Capturing videos supported.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:32</i>
		 */
		public static final int GP_OPERATION_CAPTURE_VIDEO = 1 << 1;
		/**
		 * < Capturing audio supported.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:33</i>
		 */
		public static final int GP_OPERATION_CAPTURE_AUDIO = 1 << 2;
		/**
		 * < Capturing image previews supported.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:34</i>
		 */
		public static final int GP_OPERATION_CAPTURE_PREVIEW = 1 << 3;
		/**
		 * < Camera and Driver configuration supported.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:35</i>
		 */
		public static final int GP_OPERATION_CONFIG = 1 << 4;
		/**
		 * < Camera can trigger capture and wait for events.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:36</i>
		 */
		public static final int GP_OPERATION_TRIGGER_CAPTURE = 1 << 5;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h</i><br>
	 * enum values
	 */
	public static interface CameraFileOperation {
		/**
		 * < No special file operations, just download.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:43</i>
		 */
		public static final int GP_FILE_OPERATION_NONE = 0;
		/**
		 * < Deletion of files is possible.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:44</i>
		 */
		public static final int GP_FILE_OPERATION_DELETE = 1 << 1;
		/**
		 * < Previewing viewfinder content is possible.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:45</i>
		 */
		public static final int GP_FILE_OPERATION_PREVIEW = 1 << 3;
		/**
		 * < Raw retrieval is possible (used by non-JPEG cameras)<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:46</i>
		 */
		public static final int GP_FILE_OPERATION_RAW = 1 << 4;
		/**
		 * < Audio retrieval is possible.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:47</i>
		 */
		public static final int GP_FILE_OPERATION_AUDIO = 1 << 5;
		/**
		 * < EXIF retrieval is possible.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:48</i>
		 */
		public static final int GP_FILE_OPERATION_EXIF = 1 << 6;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h</i><br>
	 * enum values
	 */
	public static interface CameraFolderOperation {
		/**
		 * < No special filesystem operation.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:55</i>
		 */
		public static final int GP_FOLDER_OPERATION_NONE = 0;
		/**
		 * < Deletion of all files on the device.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:56</i>
		 */
		public static final int GP_FOLDER_OPERATION_DELETE_ALL = 1 << 0;
		/**
		 * < Upload of files to the device possible.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:57</i>
		 */
		public static final int GP_FOLDER_OPERATION_PUT_FILE = 1 << 1;
		/**
		 * < Making directories on the device possible.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:58</i>
		 */
		public static final int GP_FOLDER_OPERATION_MAKE_DIR = 1 << 2;
		/**
		 * < Removing directories from the device possible.<br>
		 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:59</i>
		 */
		public static final int GP_FOLDER_OPERATION_REMOVE_DIR = 1 << 3;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-widget.h</i><br>
	 * enum values
	 */
	public static interface CameraWidgetType {
		/**
		 * < \brief Window widget<br>
		 *   This is the toplevel configuration widget. It should likely contain multiple #GP_WIDGET_SECTION entries.<br>
		 * <i>native declaration : gphoto2/gphoto2-widget.h:13</i>
		 */
		public static final int GP_WIDGET_WINDOW = 0;
		/**
		 * < \brief Section widget (think Tab)<br>
		 * <i>native declaration : gphoto2/gphoto2-widget.h:16</i>
		 */
		public static final int GP_WIDGET_SECTION = 1;
		/**
		 * < \brief Text widget.<br>
		 * <i>native declaration : gphoto2/gphoto2-widget.h:17</i>
		 */
		public static final int GP_WIDGET_TEXT = 2;
		/**
		 * < \brief Slider widget.<br>
		 * <i>native declaration : gphoto2/gphoto2-widget.h:18</i>
		 */
		public static final int GP_WIDGET_RANGE = 3;
		/**
		 * < \brief Toggle widget (think check box)<br>
		 * <i>native declaration : gphoto2/gphoto2-widget.h:19</i>
		 */
		public static final int GP_WIDGET_TOGGLE = 4;
		/**
		 * < \brief Radio button widget.<br>
		 * <i>native declaration : gphoto2/gphoto2-widget.h:20</i>
		 */
		public static final int GP_WIDGET_RADIO = 5;
		/**
		 * < \brief Menu widget (same as RADIO).<br>
		 * <i>native declaration : gphoto2/gphoto2-widget.h:21</i>
		 */
		public static final int GP_WIDGET_MENU = 6;
		/**
		 * < \brief Button press widget.<br>
		 * <i>native declaration : gphoto2/gphoto2-widget.h:22</i>
		 */
		public static final int GP_WIDGET_BUTTON = 7;
		/**
		 * < \brief Date entering widget.<br>
		 * <i>native declaration : gphoto2/gphoto2-widget.h:23</i>
		 */
		public static final int GP_WIDGET_DATE = 8;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-filesys.h</i><br>
	 * enum values
	 */
	public static interface CameraFileInfoFields {
		/**
		 * < \brief No fields set.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:18</i>
		 */
		public static final int GP_FILE_INFO_NONE = 0;
		/**
		 * < \brief The MIME type is set.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:19</i>
		 */
		public static final int GP_FILE_INFO_TYPE = 1 << 0;
		/**
		 * < \brief The filesize is set.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:20</i>
		 */
		public static final int GP_FILE_INFO_SIZE = 1 << 2;
		/**
		 * < \brief The width is set.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:21</i>
		 */
		public static final int GP_FILE_INFO_WIDTH = 1 << 3;
		/**
		 * < \brief The height is set.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:22</i>
		 */
		public static final int GP_FILE_INFO_HEIGHT = 1 << 4;
		/**
		 * < \brief The access permissions are set.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:23</i>
		 */
		public static final int GP_FILE_INFO_PERMISSIONS = 1 << 5;
		/**
		 * < \brief The status is set (downloaded).<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:24</i>
		 */
		public static final int GP_FILE_INFO_STATUS = 1 << 6;
		/**
		 * < \brief The modification time is set.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:25</i>
		 */
		public static final int GP_FILE_INFO_MTIME = 1 << 7;
		/**
		 * < \brief All possible fields set. Internal.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:26</i>
		 */
		public static final int GP_FILE_INFO_ALL = 0xFF;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-filesys.h</i><br>
	 * enum values
	 */
	public static interface CameraFilePermissions {
		/**
		 * < \brief No permissions.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:35</i>
		 */
		public static final int GP_FILE_PERM_NONE = 0;
		/**
		 * < \brief Read permissions.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:36</i>
		 */
		public static final int GP_FILE_PERM_READ = 1 << 0;
		/**
		 * < \brief Write permissions<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:37</i>
		 */
		public static final int GP_FILE_PERM_DELETE = 1 << 1;
		/**
		 * < \brief Internal.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:38</i>
		 */
		public static final int GP_FILE_PERM_ALL = 0xFF;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-filesys.h</i><br>
	 * enum values
	 */
	public static interface CameraFileStatus {
		/**
		 * < File is not downloaded.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:47</i>
		 */
		public static final int GP_FILE_STATUS_NOT_DOWNLOADED = 0;
		/**
		 * < File is already downloaded.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:48</i>
		 */
		public static final int GP_FILE_STATUS_DOWNLOADED = 1;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-filesys.h</i><br>
	 * enum values
	 */
	public static interface CameraStorageInfoFields {
		/**
		 * < \brief The base directory.<br>
		 * Usually / if just 1 storage is attached.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:116</i>
		 */
		public static final int GP_STORAGEINFO_BASE = (1 << 0);
		/**
		 * < \brief Label of the filesystem.<br>
		 * Could also be a DOS label.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:119</i>
		 */
		public static final int GP_STORAGEINFO_LABEL = (1 << 1);
		/**
		 * < \brief More verbose description.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:122</i>
		 */
		public static final int GP_STORAGEINFO_DESCRIPTION = (1 << 2);
		/**
		 * < \brief Access permissions.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:123</i>
		 */
		public static final int GP_STORAGEINFO_ACCESS = (1 << 3);
		/**
		 * < \brief Hardware type.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:124</i>
		 */
		public static final int GP_STORAGEINFO_STORAGETYPE = (1 << 4);
		/**
		 * < \brief Filesystem type.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:125</i>
		 */
		public static final int GP_STORAGEINFO_FILESYSTEMTYPE = (1 << 5);
		/**
		 * < \brief Maximum capacity in kbytes<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:126</i>
		 */
		public static final int GP_STORAGEINFO_MAXCAPACITY = (1 << 6);
		/**
		 * < \brief Free space in kbytes.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:127</i>
		 */
		public static final int GP_STORAGEINFO_FREESPACEKBYTES = (1 << 7);
		/**
		 * < \brief Free space in images.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:128</i>
		 */
		public static final int GP_STORAGEINFO_FREESPACEIMAGES = (1 << 8);
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-filesys.h</i><br>
	 * enum values
	 */
	public static interface CameraStorageType {
		/**
		 * < \brief Unknown storage type.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:138</i>
		 */
		public static final int GP_STORAGEINFO_ST_UNKNOWN = 0;
		/**
		 * < \brief A fixed ROM storage.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:139</i>
		 */
		public static final int GP_STORAGEINFO_ST_FIXED_ROM = 1;
		/**
		 * < \brief A removable ROM storage.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:140</i>
		 */
		public static final int GP_STORAGEINFO_ST_REMOVABLE_ROM = 2;
		/**
		 * < \brief A fixed RAM storage. (e.g. SDRAM)<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:141</i>
		 */
		public static final int GP_STORAGEINFO_ST_FIXED_RAM = 3;
		/**
		 * < \brief A removable RAM storage. (any kind of cards etc)<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:142</i>
		 */
		public static final int GP_STORAGEINFO_ST_REMOVABLE_RAM = 4;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-filesys.h</i><br>
	 * enum values
	 */
	public static interface CameraStorageAccessType {
		/**
		 * < \brief Storage is Read / Write.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:152</i>
		 */
		public static final int GP_STORAGEINFO_AC_READWRITE = 0;
		/**
		 * < \brief Storage is Ready Only.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:153</i>
		 */
		public static final int GP_STORAGEINFO_AC_READONLY = 1;
		/**
		 * < \brief Storage is Ready Only, but allows Delete.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:154</i>
		 */
		public static final int GP_STORAGEINFO_AC_READONLY_WITH_DELETE = 2;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-filesys.h</i><br>
	 * enum values
	 */
	public static interface CameraStorageFilesystemType {
		/**
		 * < \brief Undefined or unknown filesystem hierarchy.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:164</i>
		 */
		public static final int GP_STORAGEINFO_FST_UNDEFINED = 0;
		/**
		 * < \brief Generic flat storage (all in 1 directory).<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:165</i>
		 */
		public static final int GP_STORAGEINFO_FST_GENERICFLAT = 1;
		/**
		 * < \brief Generic tree hierarchy.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:166</i>
		 */
		public static final int GP_STORAGEINFO_FST_GENERICHIERARCHICAL = 2;
		/**
		 * < \brief DCIM style storage.<br>
		 * <i>native declaration : gphoto2/gphoto2-filesys.h:167</i>
		 */
		public static final int GP_STORAGEINFO_FST_DCF = 3;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-camera.h</i><br>
	 * enum values
	 */
	public static interface CameraCaptureType {
		/**
		 * < \brief Capture an image.<br>
		 * <i>native declaration : gphoto2/gphoto2-camera.h:88</i>
		 */
		public static final int GP_CAPTURE_IMAGE = 0;
		/**
		 * < \brief Capture a movie.<br>
		 * <i>native declaration : gphoto2/gphoto2-camera.h:89</i>
		 */
		public static final int GP_CAPTURE_MOVIE = 1;
		/**
		 * < \brief Capture audio.<br>
		 * <i>native declaration : gphoto2/gphoto2-camera.h:90</i>
		 */
		public static final int GP_CAPTURE_SOUND = 2;
	};
	/**
	 * <i>native declaration : gphoto2/gphoto2-camera.h</i><br>
	 * enum values
	 */
	public static interface CameraEventType {
		/**
		 * < unknown and unhandled event. argument is a char* or NULL<br>
		 * <i>native declaration : gphoto2/gphoto2-camera.h:101</i>
		 */
		public static final int GP_EVENT_UNKNOWN = 0;
		/**
		 * < timeout, no arguments<br>
		 * <i>native declaration : gphoto2/gphoto2-camera.h:102</i>
		 */
		public static final int GP_EVENT_TIMEOUT = 1;
		/**
		 * < CameraFilePath* = file path on camfs<br>
		 * <i>native declaration : gphoto2/gphoto2-camera.h:103</i>
		 */
		public static final int GP_EVENT_FILE_ADDED = 2;
		/**
		 * < CameraFilePath* = folder on camfs<br>
		 * <i>native declaration : gphoto2/gphoto2-camera.h:104</i>
		 */
		public static final int GP_EVENT_FOLDER_ADDED = 3;
		/**
		 * < last capture is complete<br>
		 * <i>native declaration : gphoto2/gphoto2-camera.h:105</i>
		 */
		public static final int GP_EVENT_CAPTURE_COMPLETE = 4;
		/**
		 * < CameraFilePath* = file path on camfs<br>
		 * <i>native declaration : gphoto2/gphoto2-camera.h:106</i>
		 */
		public static final int GP_EVENT_FILE_CHANGED = 5;
	};
	/** <i>native declaration : gphoto2/gphoto2-port.h</i> */
	public static final boolean TRUE = (boolean)(0 == 0);
	/** <i>native declaration : gphoto2/gphoto2-port.h</i> */
	public static final boolean FALSE = (boolean)(1 == 0);
	/** <i>native declaration : gphoto2/gphoto2-port.h</i> */
	public static final int GP_PORT_MAX_BUF_LEN = (int)4096;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_OK = (int)0;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR = (int)-1;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_BAD_PARAMETERS = (int)-2;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_NO_MEMORY = (int)-3;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_LIBRARY = (int)-4;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_UNKNOWN_PORT = (int)-5;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_NOT_SUPPORTED = (int)-6;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_IO = (int)-7;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_FIXED_LIMIT_EXCEEDED = (int)-8;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_TIMEOUT = (int)-10;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_IO_SUPPORTED_SERIAL = (int)-20;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_IO_SUPPORTED_USB = (int)-21;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_IO_INIT = (int)-31;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_IO_READ = (int)-34;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_IO_WRITE = (int)-35;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_IO_UPDATE = (int)-37;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_IO_SERIAL_SPEED = (int)-41;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_IO_USB_CLEAR_HALT = (int)-51;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_IO_USB_FIND = (int)-52;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_IO_USB_CLAIM = (int)-53;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_IO_LOCK = (int)-60;
	/** <i>native declaration : gphoto2/gphoto2-port-result.h</i> */
	public static final int GP_ERROR_HAL = (int)-70;
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_TXT = (String)"text/plain";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_WAV = (String)"audio/wav";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_RAW = (String)"image/x-raw";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_PNG = (String)"image/png";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_PGM = (String)"image/x-portable-graymap";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_PPM = (String)"image/x-portable-pixmap";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_PNM = (String)"image/x-portable-anymap";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_JPEG = (String)"image/jpeg";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_TIFF = (String)"image/tiff";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_BMP = (String)"image/bmp";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_QUICKTIME = (String)"video/quicktime";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_AVI = (String)"video/x-msvideo";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_CRW = (String)"image/x-canon-raw";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_CR2 = (String)"image/x-canon-cr2";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_CR3 = (String)"image/x-canon-cr3";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_NEF = (String)"image/x-nikon-nef";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_UNKNOWN = (String)"application/octet-stream";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_EXIF = (String)"application/x-exif";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_MP3 = (String)"audio/mpeg";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_OGG = (String)"application/ogg";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_WMA = (String)"audio/x-wma";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_ASF = (String)"audio/x-asf";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_MPEG = (String)"video/mpeg";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_AVCHD = (String)"video/mp2t";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_RW2 = (String)"image/x-panasonic-raw2";
	/** <i>native declaration : gphoto2/gphoto2-file.h</i> */
	public static final String GP_MIME_ARW = (String)"image/x-sony-arw";
	/** <i>native declaration : gphoto2/gphoto2-result.h</i> */
	public static final int GP_ERROR_CORRUPTED_DATA = (int)-102;
	/** <i>native declaration : gphoto2/gphoto2-result.h</i> */
	public static final int GP_ERROR_FILE_EXISTS = (int)-103;
	/** <i>native declaration : gphoto2/gphoto2-result.h</i> */
	public static final int GP_ERROR_MODEL_NOT_FOUND = (int)-105;
	/** <i>native declaration : gphoto2/gphoto2-result.h</i> */
	public static final int GP_ERROR_DIRECTORY_NOT_FOUND = (int)-107;
	/** <i>native declaration : gphoto2/gphoto2-result.h</i> */
	public static final int GP_ERROR_FILE_NOT_FOUND = (int)-108;
	/** <i>native declaration : gphoto2/gphoto2-result.h</i> */
	public static final int GP_ERROR_DIRECTORY_EXISTS = (int)-109;
	/** <i>native declaration : gphoto2/gphoto2-result.h</i> */
	public static final int GP_ERROR_CAMERA_BUSY = (int)-110;
	/** <i>native declaration : gphoto2/gphoto2-result.h</i> */
	public static final int GP_ERROR_PATH_NOT_ABSOLUTE = (int)-111;
	/** <i>native declaration : gphoto2/gphoto2-result.h</i> */
	public static final int GP_ERROR_CANCEL = (int)-112;
	/** <i>native declaration : gphoto2/gphoto2-result.h</i> */
	public static final int GP_ERROR_CAMERA_ERROR = (int)-113;
	/** <i>native declaration : gphoto2/gphoto2-result.h</i> */
	public static final int GP_ERROR_OS_FAILURE = (int)-114;
	/** <i>native declaration : gphoto2/gphoto2-result.h</i> */
	public static final int GP_ERROR_NO_SPACE = (int)-115;
	/** <i>native declaration : gphoto2/gphoto2-port-log.h</i> */
	public interface GPLogFunc extends Callback {
		void apply(int level, Pointer domain, Pointer str, Pointer data);
	};
	/** <i>native declaration : gphoto2/gphoto2-context.h</i> */
	public interface GPContextIdleFunc extends Callback {
		void apply(Pointer context, Pointer data);
	};
	/** <i>native declaration : gphoto2/gphoto2-context.h</i> */
	public interface GPContextErrorFunc extends Callback {
		void apply(Pointer context, Pointer text, Pointer data);
	};
	/** <i>native declaration : gphoto2/gphoto2-context.h</i> */
	public interface GPContextStatusFunc extends Callback {
		void apply(Pointer context, Pointer text, Pointer data);
	};
	/** <i>native declaration : gphoto2/gphoto2-context.h</i> */
	public interface GPContextMessageFunc extends Callback {
		void apply(Pointer context, Pointer text, Pointer data);
	};
	/** <i>native declaration : gphoto2/gphoto2-context.h</i> */
	public interface GPContextQuestionFunc extends Callback {
		int apply(Pointer context, Pointer text, Pointer data);
	};
	/** <i>native declaration : gphoto2/gphoto2-context.h</i> */
	public interface GPContextCancelFunc extends Callback {
		int apply(Pointer context, Pointer data);
	};
	/** <i>native declaration : gphoto2/gphoto2-context.h</i> */
	public interface GPContextProgressStartFunc extends Callback {
		int apply(Pointer context, float target, Pointer text, Pointer data);
	};
	/** <i>native declaration : gphoto2/gphoto2-context.h</i> */
	public interface GPContextProgressUpdateFunc extends Callback {
		void apply(Pointer context, int id, float current, Pointer data);
	};
	/** <i>native declaration : gphoto2/gphoto2-context.h</i> */
	public interface GPContextProgressStopFunc extends Callback {
		void apply(Pointer context, int id, Pointer data);
	};
	/** <i>native declaration : gphoto2/gphoto2-widget.h</i> */
	public interface CameraWidgetCallback extends Callback {
		int apply(Camera CameraPtr1, Pointer CameraWidgetPtr1, Pointer GPContextPtr1);
	};
	/** <i>native declaration : gphoto2/gphoto2-filesys.h</i> */
	public interface CameraFilesystemListFunc extends Callback {
		int apply(Pointer fs, Pointer folder, Pointer list, Pointer data, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-filesys.h</i> */
	public interface CameraFilesystemSetInfoFunc extends Callback {
		int apply(Pointer fs, Pointer folder, Pointer filename, CameraFileInfo.ByValue info, Pointer data, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-filesys.h</i> */
	public interface CameraFilesystemGetInfoFunc extends Callback {
		int apply(Pointer fs, Pointer folder, Pointer filename, CameraFileInfo info, Pointer data, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-filesys.h</i> */
	public interface CameraFilesystemGetFileFunc extends Callback {
		int apply(Pointer fs, Pointer folder, Pointer filename, int type, Pointer file, Pointer data, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-filesys.h</i> */
	public interface CameraFilesystemReadFileFunc extends Callback {
		int apply(Pointer fs, Pointer folder, Pointer filename, int type, long offset, Pointer buf, LongByReference size, Pointer data, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-filesys.h</i> */
	public interface CameraFilesystemDeleteFileFunc extends Callback {
		int apply(Pointer fs, Pointer folder, Pointer filename, Pointer data, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-filesys.h</i> */
	public interface CameraFilesystemPutFileFunc extends Callback {
		int apply(Pointer fs, Pointer folder, Pointer filename, int type, Pointer file, Pointer data, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-filesys.h</i> */
	public interface CameraFilesystemDeleteAllFunc extends Callback {
		int apply(Pointer fs, Pointer folder, Pointer data, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-filesys.h</i> */
	public interface CameraFilesystemDirFunc extends Callback {
		int apply(Pointer fs, Pointer folder, Pointer name, Pointer data, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-filesys.h</i> */
	public interface CameraFilesystemStorageInfoFunc extends Callback {
		int apply(Pointer fs, PointerByReference CameraStorageInformationPtrPtr1, IntByReference nrofstorageinformations, Pointer data, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraExitFunc extends Callback {
		int apply(Camera camera, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraGetConfigFunc extends Callback {
		int apply(Camera camera, PointerByReference widget, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraGetSingleConfigFunc extends Callback {
		int apply(Camera camera, Pointer name, PointerByReference widget, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraListConfigFunc extends Callback {
		int apply(Camera camera, Pointer list, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraSetConfigFunc extends Callback {
		int apply(Camera camera, Pointer widget, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraSetSingleConfigFunc extends Callback {
		int apply(Camera camera, Pointer name, Pointer widget, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraCaptureFunc extends Callback {
		int apply(Camera camera, int type, CameraFilePath path, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraTriggerCaptureFunc extends Callback {
		int apply(Camera camera, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraCapturePreviewFunc extends Callback {
		int apply(Camera camera, Pointer file, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraSummaryFunc extends Callback {
		int apply(Camera camera, CameraText text, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraManualFunc extends Callback {
		int apply(Camera camera, CameraText text, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraAboutFunc extends Callback {
		int apply(Camera camera, CameraText text, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraWaitForEvent extends Callback {
		int apply(Camera camera, int timeout, IntByReference eventtype, PointerByReference eventdata, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraPrePostFunc extends Callback {
		int apply(Camera camera, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraTimeoutFunc extends Callback {
		int apply(Camera camera, Pointer context);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraTimeoutStartFunc extends Callback {
		int apply(Camera camera, int timeout, Gphoto2Library.CameraTimeoutFunc func, Pointer data);
	};
	/** <i>native declaration : gphoto2/gphoto2-camera.h</i> */
	public interface CameraTimeoutStopFunc extends Callback {
		void apply(Camera camera, int id, Pointer data);
	};
	/** <i>native declaration : gphoto2/gphoto2-library.h</i> */
	public interface CameraLibraryIdFunc extends Callback {
		int apply(CameraText id);
	};
	/** <i>native declaration : gphoto2/gphoto2-library.h</i> */
	public interface CameraLibraryAbilitiesFunc extends Callback {
		int apply(Pointer list);
	};
	/** <i>native declaration : gphoto2/gphoto2-library.h</i> */
	public interface CameraLibraryInitFunc extends Callback {
		int apply(Camera camera, Pointer context);
	};
	/**
	 * Original signature : <code>int gp_port_info_new(GPPortInfo*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:11</i><br>
	 * @deprecated use the safer method {@link #gp_port_info_new(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_port_info_new(Pointer info);
	/**
	 * Original signature : <code>int gp_port_info_new(GPPortInfo*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:11</i>
	 */
	int gp_port_info_new(PointerByReference info);
	/**
	 * Original signature : <code>int gp_port_info_get_name(GPPortInfo, char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:12</i><br>
	 * @deprecated use the safer methods {@link #gp_port_info_get_name(x.mvmn.gphoto2.jna.Gphoto2Library.GPPortInfo, com.sun.jna.ptr.PointerByReference)} and {@link #gp_port_info_get_name(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_port_info_get_name(Pointer info, PointerByReference name);
	/**
	 * Original signature : <code>int gp_port_info_get_name(GPPortInfo, char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:12</i>
	 */
	int gp_port_info_get_name(Gphoto2Library.GPPortInfo info, PointerByReference name);
	/**
	 * Original signature : <code>int gp_port_info_set_name(GPPortInfo, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:13</i><br>
	 * @deprecated use the safer methods {@link #gp_port_info_set_name(x.mvmn.gphoto2.jna.Gphoto2Library.GPPortInfo, java.lang.String)} and {@link #gp_port_info_set_name(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_port_info_set_name(Pointer info, Pointer name);
	/**
	 * Original signature : <code>int gp_port_info_set_name(GPPortInfo, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:13</i>
	 */
	int gp_port_info_set_name(Gphoto2Library.GPPortInfo info, String name);
	/**
	 * Original signature : <code>int gp_port_info_get_path(GPPortInfo, char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:14</i><br>
	 * @deprecated use the safer methods {@link #gp_port_info_get_path(x.mvmn.gphoto2.jna.Gphoto2Library.GPPortInfo, com.sun.jna.ptr.PointerByReference)} and {@link #gp_port_info_get_path(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_port_info_get_path(Pointer info, PointerByReference path);
	/**
	 * Original signature : <code>int gp_port_info_get_path(GPPortInfo, char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:14</i>
	 */
	int gp_port_info_get_path(Gphoto2Library.GPPortInfo info, PointerByReference path);
	/**
	 * Original signature : <code>int gp_port_info_set_path(GPPortInfo, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:15</i><br>
	 * @deprecated use the safer methods {@link #gp_port_info_set_path(x.mvmn.gphoto2.jna.Gphoto2Library.GPPortInfo, java.lang.String)} and {@link #gp_port_info_set_path(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_port_info_set_path(Pointer info, Pointer path);
	/**
	 * Original signature : <code>int gp_port_info_set_path(GPPortInfo, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:15</i>
	 */
	int gp_port_info_set_path(Gphoto2Library.GPPortInfo info, String path);
	/**
	 * Original signature : <code>int gp_port_info_get_type(GPPortInfo, GPPortType*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:16</i><br>
	 * @deprecated use the safer methods {@link #gp_port_info_get_type(x.mvmn.gphoto2.jna.Gphoto2Library.GPPortInfo, java.nio.IntBuffer)} and {@link #gp_port_info_get_type(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int gp_port_info_get_type(Pointer info, IntByReference type);
	/**
	 * Original signature : <code>int gp_port_info_get_type(GPPortInfo, GPPortType*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:16</i>
	 */
	int gp_port_info_get_type(Gphoto2Library.GPPortInfo info, IntBuffer type);
	/**
	 * Original signature : <code>int gp_port_info_set_type(GPPortInfo, const GPPortType)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:17</i><br>
	 * @deprecated use the safer methods {@link #gp_port_info_set_type(x.mvmn.gphoto2.jna.Gphoto2Library.GPPortInfo, int)} and {@link #gp_port_info_set_type(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int gp_port_info_set_type(Pointer info, int type);
	/**
	 * Original signature : <code>int gp_port_info_set_type(GPPortInfo, const GPPortType)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:17</i>
	 */
	int gp_port_info_set_type(Gphoto2Library.GPPortInfo info, int type);
	/**
	 * Original signature : <code>int gp_port_info_get_library_filename(GPPortInfo, char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:18</i><br>
	 * @deprecated use the safer methods {@link #gp_port_info_get_library_filename(x.mvmn.gphoto2.jna.Gphoto2Library.GPPortInfo, com.sun.jna.ptr.PointerByReference)} and {@link #gp_port_info_get_library_filename(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_port_info_get_library_filename(Pointer info, PointerByReference lib);
	/**
	 * Original signature : <code>int gp_port_info_get_library_filename(GPPortInfo, char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:18</i>
	 */
	int gp_port_info_get_library_filename(Gphoto2Library.GPPortInfo info, PointerByReference lib);
	/**
	 * Original signature : <code>int gp_port_info_set_library_filename(GPPortInfo, char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:19</i><br>
	 * @deprecated use the safer methods {@link #gp_port_info_set_library_filename(x.mvmn.gphoto2.jna.Gphoto2Library.GPPortInfo, java.nio.ByteBuffer)} and {@link #gp_port_info_set_library_filename(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_port_info_set_library_filename(Pointer info, Pointer lib);
	/**
	 * Original signature : <code>int gp_port_info_set_library_filename(GPPortInfo, char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:19</i>
	 */
	int gp_port_info_set_library_filename(Gphoto2Library.GPPortInfo info, ByteBuffer lib);
	/**
	 * Original signature : <code>int gp_port_info_list_new(GPPortInfoList**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:24</i>
	 */
	int gp_port_info_list_new(PointerByReference list);
	/**
	 * Original signature : <code>int gp_port_info_list_free(GPPortInfoList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:25</i><br>
	 * @deprecated use the safer method {@link #gp_port_info_list_free(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_port_info_list_free(Pointer list);
	/**
	 * Original signature : <code>int gp_port_info_list_free(GPPortInfoList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:25</i>
	 */
	int gp_port_info_list_free(PointerByReference list);
	/**
	 * Original signature : <code>int gp_port_info_list_append(GPPortInfoList*, GPPortInfo)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:27</i><br>
	 * @deprecated use the safer methods {@link #gp_port_info_list_append(com.sun.jna.ptr.PointerByReference, x.mvmn.gphoto2.jna.Gphoto2Library.GPPortInfo)} and {@link #gp_port_info_list_append(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_port_info_list_append(Pointer list, Pointer info);
	/**
	 * Original signature : <code>int gp_port_info_list_append(GPPortInfoList*, GPPortInfo)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:27</i>
	 */
	int gp_port_info_list_append(PointerByReference list, Gphoto2Library.GPPortInfo info);
	/**
	 * Original signature : <code>int gp_port_info_list_append(GPPortInfoList*, GPPortInfo)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:27</i>
	 */
	int gp_port_info_list_append(PointerByReference list, Pointer info);
	/**
	 * Original signature : <code>int gp_port_info_list_load(GPPortInfoList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:29</i><br>
	 * @deprecated use the safer method {@link #gp_port_info_list_load(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_port_info_list_load(Pointer list);
	/**
	 * Original signature : <code>int gp_port_info_list_load(GPPortInfoList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:29</i>
	 */
	int gp_port_info_list_load(PointerByReference list);
	/**
	 * Original signature : <code>int gp_port_info_list_count(GPPortInfoList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:31</i><br>
	 * @deprecated use the safer method {@link #gp_port_info_list_count(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_port_info_list_count(Pointer list);
	/**
	 * Original signature : <code>int gp_port_info_list_count(GPPortInfoList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:31</i>
	 */
	int gp_port_info_list_count(PointerByReference list);
	/**
	 * Original signature : <code>int gp_port_info_list_lookup_path(GPPortInfoList*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:33</i><br>
	 * @deprecated use the safer methods {@link #gp_port_info_list_lookup_path(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #gp_port_info_list_lookup_path(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_port_info_list_lookup_path(Pointer list, Pointer path);
	/**
	 * Original signature : <code>int gp_port_info_list_lookup_path(GPPortInfoList*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:33</i>
	 */
	int gp_port_info_list_lookup_path(PointerByReference list, String path);
	/**
	 * Original signature : <code>int gp_port_info_list_lookup_path(GPPortInfoList*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:33</i>
	 */
	int gp_port_info_list_lookup_path(PointerByReference list, Pointer path);
	/**
	 * Original signature : <code>int gp_port_info_list_lookup_name(GPPortInfoList*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:34</i><br>
	 * @deprecated use the safer methods {@link #gp_port_info_list_lookup_name(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #gp_port_info_list_lookup_name(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_port_info_list_lookup_name(Pointer list, Pointer name);
	/**
	 * Original signature : <code>int gp_port_info_list_lookup_name(GPPortInfoList*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:34</i>
	 */
	int gp_port_info_list_lookup_name(PointerByReference list, String name);
	/**
	 * Original signature : <code>int gp_port_info_list_lookup_name(GPPortInfoList*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:34</i>
	 */
	int gp_port_info_list_lookup_name(PointerByReference list, Pointer name);
	/**
	 * Original signature : <code>int gp_port_info_list_get_info(GPPortInfoList*, int, GPPortInfo*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:36</i><br>
	 * @deprecated use the safer method {@link #gp_port_info_list_get_info(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_port_info_list_get_info(Pointer list, int n, Pointer info);
	/**
	 * Original signature : <code>int gp_port_info_list_get_info(GPPortInfoList*, int, GPPortInfo*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:36</i>
	 */
	int gp_port_info_list_get_info(PointerByReference list, int n, PointerByReference info);
	/**
	 * Original signature : <code>char* gp_port_message_codeset(const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:38</i><br>
	 * @deprecated use the safer methods {@link #gp_port_message_codeset(java.lang.String)} and {@link #gp_port_message_codeset(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	String gp_port_message_codeset(Pointer charPtr1);
	/**
	 * Original signature : <code>char* gp_port_message_codeset(const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:38</i>
	 */
	String gp_port_message_codeset(String charPtr1);
	/**
	 * Original signature : <code>int gp_port_init_localedir(const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:40</i><br>
	 * @deprecated use the safer methods {@link #gp_port_init_localedir(java.lang.String)} and {@link #gp_port_init_localedir(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_port_init_localedir(Pointer localedir);
	/**
	 * Original signature : <code>int gp_port_init_localedir(const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-info-list.h:40</i>
	 */
	int gp_port_init_localedir(String localedir);
	/**
	 * Original signature : <code>int gp_port_new(GPPort**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:151</i><br>
	 * @deprecated use the safer method {@link #gp_port_new(x.mvmn.gphoto2.jna.GPPort.ByReference[])} instead
	 */
	@Deprecated 
	int gp_port_new(PointerByReference port);
	/**
	 * Original signature : <code>int gp_port_new(GPPort**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:151</i>
	 */
	int gp_port_new(GPPort.ByReference port[]);
	/**
	 * Original signature : <code>int gp_port_free(GPPort*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:152</i>
	 */
	int gp_port_free(GPPort port);
	/**
	 * Original signature : <code>int gp_port_set_info(GPPort*, GPPortInfo)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:154</i><br>
	 * @deprecated use the safer methods {@link #gp_port_set_info(x.mvmn.gphoto2.jna.GPPort, x.mvmn.gphoto2.jna.Gphoto2Library.GPPortInfo)} and {@link #gp_port_set_info(x.mvmn.gphoto2.jna.GPPort, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_port_set_info(GPPort port, Pointer info);
	/**
	 * Original signature : <code>int gp_port_set_info(GPPort*, GPPortInfo)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:154</i>
	 */
	int gp_port_set_info(GPPort port, Gphoto2Library.GPPortInfo info);
	/**
	 * Original signature : <code>int gp_port_get_info(GPPort*, GPPortInfo*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:155</i><br>
	 * @deprecated use the safer method {@link #gp_port_get_info(x.mvmn.gphoto2.jna.GPPort, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_port_get_info(GPPort port, Pointer info);
	/**
	 * Original signature : <code>int gp_port_get_info(GPPort*, GPPortInfo*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:155</i>
	 */
	int gp_port_get_info(GPPort port, PointerByReference info);
	/**
	 * Original signature : <code>int gp_port_open(GPPort*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:157</i>
	 */
	int gp_port_open(GPPort port);
	/**
	 * Original signature : <code>int gp_port_close(GPPort*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:158</i>
	 */
	int gp_port_close(GPPort port);
	/**
	 * Original signature : <code>int gp_port_reset(GPPort*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:160</i>
	 */
	int gp_port_reset(GPPort port);
	/**
	 * Original signature : <code>int gp_port_write(GPPort*, const char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:162</i><br>
	 * @deprecated use the safer methods {@link #gp_port_write(x.mvmn.gphoto2.jna.GPPort, java.lang.String, int)} and {@link #gp_port_write(x.mvmn.gphoto2.jna.GPPort, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int gp_port_write(GPPort port, Pointer data, int size);
	/**
	 * Original signature : <code>int gp_port_write(GPPort*, const char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:162</i>
	 */
	int gp_port_write(GPPort port, String data, int size);
	/**
	 * Original signature : <code>int gp_port_read(GPPort*, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:163</i><br>
	 * @deprecated use the safer methods {@link #gp_port_read(x.mvmn.gphoto2.jna.GPPort, java.nio.ByteBuffer, int)} and {@link #gp_port_read(x.mvmn.gphoto2.jna.GPPort, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int gp_port_read(GPPort port, Pointer data, int size);
	/**
	 * Original signature : <code>int gp_port_read(GPPort*, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:163</i>
	 */
	int gp_port_read(GPPort port, ByteBuffer data, int size);
	/**
	 * Original signature : <code>int gp_port_check_int(GPPort*, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:164</i><br>
	 * @deprecated use the safer methods {@link #gp_port_check_int(x.mvmn.gphoto2.jna.GPPort, java.nio.ByteBuffer, int)} and {@link #gp_port_check_int(x.mvmn.gphoto2.jna.GPPort, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int gp_port_check_int(GPPort port, Pointer data, int size);
	/**
	 * Original signature : <code>int gp_port_check_int(GPPort*, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:164</i>
	 */
	int gp_port_check_int(GPPort port, ByteBuffer data, int size);
	/**
	 * Original signature : <code>int gp_port_check_int_fast(GPPort*, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:165</i><br>
	 * @deprecated use the safer methods {@link #gp_port_check_int_fast(x.mvmn.gphoto2.jna.GPPort, java.nio.ByteBuffer, int)} and {@link #gp_port_check_int_fast(x.mvmn.gphoto2.jna.GPPort, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int gp_port_check_int_fast(GPPort port, Pointer data, int size);
	/**
	 * Original signature : <code>int gp_port_check_int_fast(GPPort*, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:165</i>
	 */
	int gp_port_check_int_fast(GPPort port, ByteBuffer data, int size);
	/**
	 * Original signature : <code>int gp_port_get_timeout(GPPort*, int*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:167</i><br>
	 * @deprecated use the safer methods {@link #gp_port_get_timeout(x.mvmn.gphoto2.jna.GPPort, java.nio.IntBuffer)} and {@link #gp_port_get_timeout(x.mvmn.gphoto2.jna.GPPort, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int gp_port_get_timeout(GPPort port, IntByReference timeout);
	/**
	 * Original signature : <code>int gp_port_get_timeout(GPPort*, int*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:167</i>
	 */
	int gp_port_get_timeout(GPPort port, IntBuffer timeout);
	/**
	 * Original signature : <code>int gp_port_set_timeout(GPPort*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:168</i>
	 */
	int gp_port_set_timeout(GPPort port, int timeout);
	/**
	 * Original signature : <code>int gp_port_set_settings(GPPort*, GPPortSettings)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:170</i>
	 */
	int gp_port_set_settings(GPPort port, GPPortSettings.ByValue settings);
	/**
	 * Original signature : <code>int gp_port_get_settings(GPPort*, GPPortSettings*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:171</i>
	 */
	int gp_port_get_settings(GPPort port, GPPortSettings settings);
	/**
	 * Original signature : <code>int gp_port_get_pin(GPPort*, GPPin, GPLevel*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:198</i><br>
	 * @deprecated use the safer methods {@link #gp_port_get_pin(x.mvmn.gphoto2.jna.GPPort, int, java.nio.IntBuffer)} and {@link #gp_port_get_pin(x.mvmn.gphoto2.jna.GPPort, int, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int gp_port_get_pin(GPPort port, int pin, IntByReference level);
	/**
	 * Original signature : <code>int gp_port_get_pin(GPPort*, GPPin, GPLevel*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:198</i>
	 */
	int gp_port_get_pin(GPPort port, int pin, IntBuffer level);
	/**
	 * Original signature : <code>int gp_port_set_pin(GPPort*, GPPin, GPLevel)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:199</i>
	 */
	int gp_port_set_pin(GPPort port, int pin, int level);
	/**
	 * Original signature : <code>int gp_port_send_break(GPPort*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:201</i>
	 */
	int gp_port_send_break(GPPort port, int duration);
	/**
	 * Original signature : <code>int gp_port_flush(GPPort*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:202</i>
	 */
	int gp_port_flush(GPPort port, int direction);
	/**
	 * Original signature : <code>int gp_port_usb_find_device(GPPort*, int, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:204</i>
	 */
	int gp_port_usb_find_device(GPPort port, int idvendor, int idproduct);
	/**
	 * Original signature : <code>int gp_port_usb_find_device_by_class(GPPort*, int, int, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:205</i>
	 */
	int gp_port_usb_find_device_by_class(GPPort port, int mainclass, int subclass, int protocol);
	/**
	 * Original signature : <code>int gp_port_usb_clear_halt(GPPort*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:206</i>
	 */
	int gp_port_usb_clear_halt(GPPort port, int ep);
	/**
	 * Original signature : <code>int gp_port_usb_msg_write(GPPort*, int, int, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:207</i><br>
	 * @deprecated use the safer methods {@link #gp_port_usb_msg_write(x.mvmn.gphoto2.jna.GPPort, int, int, int, java.nio.ByteBuffer, int)} and {@link #gp_port_usb_msg_write(x.mvmn.gphoto2.jna.GPPort, int, int, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int gp_port_usb_msg_write(GPPort port, int request, int value, int index, Pointer bytes, int size);
	/**
	 * Original signature : <code>int gp_port_usb_msg_write(GPPort*, int, int, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:207</i>
	 */
	int gp_port_usb_msg_write(GPPort port, int request, int value, int index, ByteBuffer bytes, int size);
	/**
	 * Original signature : <code>int gp_port_usb_msg_read(GPPort*, int, int, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:209</i><br>
	 * @deprecated use the safer methods {@link #gp_port_usb_msg_read(x.mvmn.gphoto2.jna.GPPort, int, int, int, java.nio.ByteBuffer, int)} and {@link #gp_port_usb_msg_read(x.mvmn.gphoto2.jna.GPPort, int, int, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int gp_port_usb_msg_read(GPPort port, int request, int value, int index, Pointer bytes, int size);
	/**
	 * Original signature : <code>int gp_port_usb_msg_read(GPPort*, int, int, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:209</i>
	 */
	int gp_port_usb_msg_read(GPPort port, int request, int value, int index, ByteBuffer bytes, int size);
	/**
	 * Original signature : <code>int gp_port_usb_msg_interface_write(GPPort*, int, int, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:211</i><br>
	 * @deprecated use the safer methods {@link #gp_port_usb_msg_interface_write(x.mvmn.gphoto2.jna.GPPort, int, int, int, java.nio.ByteBuffer, int)} and {@link #gp_port_usb_msg_interface_write(x.mvmn.gphoto2.jna.GPPort, int, int, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int gp_port_usb_msg_interface_write(GPPort port, int request, int value, int index, Pointer bytes, int size);
	/**
	 * Original signature : <code>int gp_port_usb_msg_interface_write(GPPort*, int, int, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:211</i>
	 */
	int gp_port_usb_msg_interface_write(GPPort port, int request, int value, int index, ByteBuffer bytes, int size);
	/**
	 * Original signature : <code>int gp_port_usb_msg_interface_read(GPPort*, int, int, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:213</i><br>
	 * @deprecated use the safer methods {@link #gp_port_usb_msg_interface_read(x.mvmn.gphoto2.jna.GPPort, int, int, int, java.nio.ByteBuffer, int)} and {@link #gp_port_usb_msg_interface_read(x.mvmn.gphoto2.jna.GPPort, int, int, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int gp_port_usb_msg_interface_read(GPPort port, int request, int value, int index, Pointer bytes, int size);
	/**
	 * Original signature : <code>int gp_port_usb_msg_interface_read(GPPort*, int, int, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:213</i>
	 */
	int gp_port_usb_msg_interface_read(GPPort port, int request, int value, int index, ByteBuffer bytes, int size);
	/**
	 * Original signature : <code>int gp_port_usb_msg_class_write(GPPort*, int, int, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:215</i><br>
	 * @deprecated use the safer methods {@link #gp_port_usb_msg_class_write(x.mvmn.gphoto2.jna.GPPort, int, int, int, java.nio.ByteBuffer, int)} and {@link #gp_port_usb_msg_class_write(x.mvmn.gphoto2.jna.GPPort, int, int, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int gp_port_usb_msg_class_write(GPPort port, int request, int value, int index, Pointer bytes, int size);
	/**
	 * Original signature : <code>int gp_port_usb_msg_class_write(GPPort*, int, int, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:215</i>
	 */
	int gp_port_usb_msg_class_write(GPPort port, int request, int value, int index, ByteBuffer bytes, int size);
	/**
	 * Original signature : <code>int gp_port_usb_msg_class_read(GPPort*, int, int, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:217</i><br>
	 * @deprecated use the safer methods {@link #gp_port_usb_msg_class_read(x.mvmn.gphoto2.jna.GPPort, int, int, int, java.nio.ByteBuffer, int)} and {@link #gp_port_usb_msg_class_read(x.mvmn.gphoto2.jna.GPPort, int, int, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int gp_port_usb_msg_class_read(GPPort port, int request, int value, int index, Pointer bytes, int size);
	/**
	 * Original signature : <code>int gp_port_usb_msg_class_read(GPPort*, int, int, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:217</i>
	 */
	int gp_port_usb_msg_class_read(GPPort port, int request, int value, int index, ByteBuffer bytes, int size);
	/**
	 * Original signature : <code>int gp_port_seek(GPPort*, int, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:220</i>
	 */
	int gp_port_seek(GPPort port, int offset, int whence);
	/**
	 * Original signature : <code>int gp_port_send_scsi_cmd(GPPort*, int, char*, int, char*, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:222</i><br>
	 * @deprecated use the safer methods {@link #gp_port_send_scsi_cmd(x.mvmn.gphoto2.jna.GPPort, int, java.nio.ByteBuffer, int, java.nio.ByteBuffer, int, java.nio.ByteBuffer, int)} and {@link #gp_port_send_scsi_cmd(x.mvmn.gphoto2.jna.GPPort, int, com.sun.jna.Pointer, int, com.sun.jna.Pointer, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int gp_port_send_scsi_cmd(GPPort port, int to_dev, Pointer cmd, int cmd_size, Pointer sense, int sense_size, Pointer data, int data_size);
	/**
	 * Original signature : <code>int gp_port_send_scsi_cmd(GPPort*, int, char*, int, char*, int, char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:222</i>
	 */
	int gp_port_send_scsi_cmd(GPPort port, int to_dev, ByteBuffer cmd, int cmd_size, ByteBuffer sense, int sense_size, ByteBuffer data, int data_size);
	/**
	 * Error reporting<br>
	 * Original signature : <code>int gp_port_set_error(GPPort*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:228</i><br>
	 * @deprecated use the safer methods {@link #gp_port_set_error(x.mvmn.gphoto2.jna.GPPort, java.lang.String, java.lang.Object)} and {@link #gp_port_set_error(x.mvmn.gphoto2.jna.GPPort, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	int gp_port_set_error(GPPort port, Pointer format, Object... varArgs1);
	/**
	 * Error reporting<br>
	 * Original signature : <code>int gp_port_set_error(GPPort*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:228</i>
	 */
	int gp_port_set_error(GPPort port, String format, Object... varArgs1);
	/**
	 * Original signature : <code>char* gp_port_get_error(GPPort*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port.h:233</i>
	 */
	String gp_port_get_error(GPPort port);
	/**
	 * Original signature : <code>int gp_log_add_func(GPLogLevel, GPLogFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-log.h:45</i>
	 */
	int gp_log_add_func(int level, Gphoto2Library.GPLogFunc func, Pointer data);
	/**
	 * Original signature : <code>int gp_log_remove_func(int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-log.h:46</i>
	 */
	int gp_log_remove_func(int id);
	/**
	 * Logging<br>
	 * Original signature : <code>void gp_log(GPLogLevel, const char*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-log.h:49</i><br>
	 * @deprecated use the safer methods {@link #gp_log(int, java.lang.String, java.lang.String, java.lang.Object)} and {@link #gp_log(int, com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	void gp_log(int level, Pointer domain, Pointer format, Object... varArgs1);
	/**
	 * Logging<br>
	 * Original signature : <code>void gp_log(GPLogLevel, const char*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-log.h:49</i>
	 */
	void gp_log(int level, String domain, String format, Object... varArgs1);
	/**
	 * Original signature : <code>void gp_log_with_source_location(GPLogLevel, const char*, int, const char*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-log.h:55</i><br>
	 * @deprecated use the safer methods {@link #gp_log_with_source_location(int, java.lang.String, int, java.lang.String, java.lang.String, java.lang.Object)} and {@link #gp_log_with_source_location(int, com.sun.jna.Pointer, int, com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	void gp_log_with_source_location(int level, Pointer file, int line, Pointer func, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>void gp_log_with_source_location(GPLogLevel, const char*, int, const char*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-log.h:55</i>
	 */
	void gp_log_with_source_location(int level, String file, int line, String func, String format, Object... varArgs1);
	/**
	 * Original signature : <code>void gp_logv(GPLogLevel, const char*, const char*, va_list)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-log.h:62</i><br>
	 * @deprecated use the safer methods {@link #gp_logv(int, java.lang.String, java.lang.String, java.lang.Object)} and {@link #gp_logv(int, com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	void gp_logv(int level, Pointer domain, Pointer format, Object... args);
	/**
	 * Original signature : <code>void gp_logv(GPLogLevel, const char*, const char*, va_list)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-log.h:62</i>
	 */
	void gp_logv(int level, String domain, String format, Object... args);
	/**
	 * Original signature : <code>void gp_log_data(const char*, const char*, unsigned int, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-log.h:68</i><br>
	 * @deprecated use the safer methods {@link #gp_log_data(java.lang.String, java.lang.String, int, java.lang.String, java.lang.Object)} and {@link #gp_log_data(com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	void gp_log_data(Pointer domain, Pointer data, int size, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>void gp_log_data(const char*, const char*, unsigned int, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-log.h:68</i>
	 */
	void gp_log_data(String domain, String data, int size, String format, Object... varArgs1);
	/**
	 * Original signature : <code>char* gp_port_result_as_string(int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-port-result.h:126</i>
	 */
	String gp_port_result_as_string(int result);
	/**
	 * Original signature : <code>int gp_file_new(CameraFile**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:83</i>
	 */
	int gp_file_new(PointerByReference file);
	/**
	 * Original signature : <code>int gp_file_new_from_fd(CameraFile**, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:84</i>
	 */
	int gp_file_new_from_fd(PointerByReference file, int fd);
	/**
	 * Original signature : <code>int gp_file_new_from_handler(CameraFile**, CameraFileHandler*, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:85</i>
	 */
	int gp_file_new_from_handler(PointerByReference file, CameraFileHandler handler, Pointer priv);
	/**
	 * Original signature : <code>int gp_file_ref(CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:86</i><br>
	 * @deprecated use the safer method {@link #gp_file_ref(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_file_ref(Pointer file);
	/**
	 * Original signature : <code>int gp_file_ref(CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:86</i>
	 */
	int gp_file_ref(PointerByReference file);
	/**
	 * Original signature : <code>int gp_file_unref(CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:87</i><br>
	 * @deprecated use the safer method {@link #gp_file_unref(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_file_unref(Pointer file);
	/**
	 * Original signature : <code>int gp_file_unref(CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:87</i>
	 */
	int gp_file_unref(PointerByReference file);
	/**
	 * Original signature : <code>int gp_file_free(CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:88</i><br>
	 * @deprecated use the safer method {@link #gp_file_free(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_file_free(Pointer file);
	/**
	 * Original signature : <code>int gp_file_free(CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:88</i>
	 */
	int gp_file_free(PointerByReference file);
	/**
	 * Original signature : <code>int gp_file_set_name(CameraFile*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:90</i><br>
	 * @deprecated use the safer methods {@link #gp_file_set_name(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #gp_file_set_name(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_file_set_name(Pointer file, Pointer name);
	/**
	 * Original signature : <code>int gp_file_set_name(CameraFile*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:90</i>
	 */
	int gp_file_set_name(PointerByReference file, String name);
	/**
	 * Original signature : <code>int gp_file_set_name(CameraFile*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:90</i>
	 */
	int gp_file_set_name(PointerByReference file, Pointer name);
	/**
	 * Original signature : <code>int gp_file_get_name(CameraFile*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:91</i><br>
	 * @deprecated use the safer methods {@link #gp_file_get_name(com.sun.jna.ptr.PointerByReference, java.lang.String[])} and {@link #gp_file_get_name(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_file_get_name(Pointer file, PointerByReference name);
	/**
	 * Original signature : <code>int gp_file_get_name(CameraFile*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:91</i>
	 */
	int gp_file_get_name(PointerByReference file, String name[]);
	/**
	 * Original signature : <code>int gp_file_get_name(CameraFile*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:91</i>
	 */
	int gp_file_get_name(PointerByReference file, PointerByReference name);
	/**
	 * Original signature : <code>int gp_file_set_mime_type(CameraFile*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:93</i><br>
	 * @deprecated use the safer methods {@link #gp_file_set_mime_type(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #gp_file_set_mime_type(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_file_set_mime_type(Pointer file, Pointer mime_type);
	/**
	 * Original signature : <code>int gp_file_set_mime_type(CameraFile*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:93</i>
	 */
	int gp_file_set_mime_type(PointerByReference file, String mime_type);
	/**
	 * Original signature : <code>int gp_file_set_mime_type(CameraFile*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:93</i>
	 */
	int gp_file_set_mime_type(PointerByReference file, Pointer mime_type);
	/**
	 * Original signature : <code>int gp_file_get_mime_type(CameraFile*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:94</i><br>
	 * @deprecated use the safer methods {@link #gp_file_get_mime_type(com.sun.jna.ptr.PointerByReference, java.lang.String[])} and {@link #gp_file_get_mime_type(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_file_get_mime_type(Pointer file, PointerByReference mime_type);
	/**
	 * Original signature : <code>int gp_file_get_mime_type(CameraFile*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:94</i>
	 */
	int gp_file_get_mime_type(PointerByReference file, String mime_type[]);
	/**
	 * Original signature : <code>int gp_file_get_mime_type(CameraFile*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:94</i>
	 */
	int gp_file_get_mime_type(PointerByReference file, PointerByReference mime_type);
	/**
	 * <i>native declaration : gphoto2/gphoto2-file.h:96</i><br>
	 * Conversion Error : time_t (Primitive without known type for this runtime: NativeTime)
	 */
	/**
	 * <i>native declaration : gphoto2/gphoto2-file.h:97</i><br>
	 * Conversion Error : time_t* (Primitive without known type for this runtime: NativeTime)
	 */
	/**
	 * Original signature : <code>int gp_file_detect_mime_type(CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:99</i><br>
	 * @deprecated use the safer method {@link #gp_file_detect_mime_type(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_file_detect_mime_type(Pointer file);
	/**
	 * Original signature : <code>int gp_file_detect_mime_type(CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:99</i>
	 */
	int gp_file_detect_mime_type(PointerByReference file);
	/**
	 * Original signature : <code>int gp_file_adjust_name_for_mime_type(CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:100</i><br>
	 * @deprecated use the safer method {@link #gp_file_adjust_name_for_mime_type(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_file_adjust_name_for_mime_type(Pointer file);
	/**
	 * Original signature : <code>int gp_file_adjust_name_for_mime_type(CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:100</i>
	 */
	int gp_file_adjust_name_for_mime_type(PointerByReference file);
	/**
	 * Original signature : <code>int gp_file_get_name_by_type(CameraFile*, const char*, CameraFileType, char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:101</i><br>
	 * @deprecated use the safer methods {@link #gp_file_get_name_by_type(com.sun.jna.ptr.PointerByReference, java.lang.String, int, com.sun.jna.ptr.PointerByReference)} and {@link #gp_file_get_name_by_type(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_file_get_name_by_type(Pointer file, Pointer basename, int type, PointerByReference newname);
	/**
	 * Original signature : <code>int gp_file_get_name_by_type(CameraFile*, const char*, CameraFileType, char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:101</i>
	 */
	int gp_file_get_name_by_type(PointerByReference file, String basename, int type, PointerByReference newname);
	/**
	 * Original signature : <code>int gp_file_get_name_by_type(CameraFile*, const char*, CameraFileType, char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:101</i>
	 */
	int gp_file_get_name_by_type(PointerByReference file, Pointer basename, int type, PointerByReference newname);
	/**
	 * Original signature : <code>int gp_file_set_data_and_size(CameraFile*, char*, unsigned long long)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:103</i><br>
	 * @deprecated use the safer methods {@link #gp_file_set_data_and_size(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, long)} and {@link #gp_file_set_data_and_size(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, long)} instead
	 */
	@Deprecated 
	int gp_file_set_data_and_size(Pointer CameraFilePtr1, Pointer data, long size);
	/**
	 * Original signature : <code>int gp_file_set_data_and_size(CameraFile*, char*, unsigned long long)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:103</i>
	 */
	int gp_file_set_data_and_size(PointerByReference CameraFilePtr1, ByteBuffer data, long size);
	/**
	 * Original signature : <code>int gp_file_set_data_and_size(CameraFile*, char*, unsigned long long)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:103</i>
	 */
	int gp_file_set_data_and_size(PointerByReference CameraFilePtr1, Pointer data, long size);
	/**
	 * Original signature : <code>int gp_file_get_data_and_size(CameraFile*, const char**, unsigned long long*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:105</i><br>
	 * @deprecated use the safer methods {@link #gp_file_get_data_and_size(com.sun.jna.ptr.PointerByReference, java.lang.String[], java.nio.LongBuffer)} and {@link #gp_file_get_data_and_size(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int gp_file_get_data_and_size(Pointer CameraFilePtr1, PointerByReference data, LongByReference size);
	/**
	 * Original signature : <code>int gp_file_get_data_and_size(CameraFile*, const char**, unsigned long long*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:105</i>
	 */
	int gp_file_get_data_and_size(PointerByReference CameraFilePtr1, String data[], LongBuffer size);
	/**
	 * Original signature : <code>int gp_file_get_data_and_size(CameraFile*, const char**, unsigned long long*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:105</i>
	 */
	int gp_file_get_data_and_size(PointerByReference CameraFilePtr1, PointerByReference data, LongByReference size);
	/**
	 * "Do not use those"<br>
	 * These functions probably were originally intended for internal use only.<br>
	 * However, due to<br>
	 *   - the lack of good documentation<br>
	 *   - this being the obvious way to save a file<br>
	 *   - the fact that libgphoto2 has been exporting all its internal<br>
	 *     symbols for years (until 2005-06)<br>
	 *   - our in-house frontends gphoto2 and gtkam using them<br>
	 * a number of external frontends started to use these functions, as<br>
	 * of 2005-06:<br>
	 *    - digikam<br>
	 *    - f-spot<br>
	 *    - gthumb<br>
	 * But a few frontends can live without it (and thus are likely to<br>
	 * use the correct API):<br>
	 *    - flphoto<br>
	 *    - kamera<br>
	 * So we're going to phase these functions out over the next year or<br>
	 * so, going the GTK way of keeping the ABI but breaking the API. So<br>
	 * we'll continue to export functionally equivalent functions, but the<br>
	 * header files will not contain definitions for you to use any more.<br>
	 * Original signature : <code>int gp_file_open(CameraFile*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:131</i><br>
	 * @deprecated use the safer methods {@link #gp_file_open(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #gp_file_open(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_file_open(Pointer file, Pointer filename);
	/**
	 * "Do not use those"<br>
	 * These functions probably were originally intended for internal use only.<br>
	 * However, due to<br>
	 *   - the lack of good documentation<br>
	 *   - this being the obvious way to save a file<br>
	 *   - the fact that libgphoto2 has been exporting all its internal<br>
	 *     symbols for years (until 2005-06)<br>
	 *   - our in-house frontends gphoto2 and gtkam using them<br>
	 * a number of external frontends started to use these functions, as<br>
	 * of 2005-06:<br>
	 *    - digikam<br>
	 *    - f-spot<br>
	 *    - gthumb<br>
	 * But a few frontends can live without it (and thus are likely to<br>
	 * use the correct API):<br>
	 *    - flphoto<br>
	 *    - kamera<br>
	 * So we're going to phase these functions out over the next year or<br>
	 * so, going the GTK way of keeping the ABI but breaking the API. So<br>
	 * we'll continue to export functionally equivalent functions, but the<br>
	 * header files will not contain definitions for you to use any more.<br>
	 * Original signature : <code>int gp_file_open(CameraFile*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:131</i>
	 */
	int gp_file_open(PointerByReference file, String filename);
	/**
	 * "Do not use those"<br>
	 * These functions probably were originally intended for internal use only.<br>
	 * However, due to<br>
	 *   - the lack of good documentation<br>
	 *   - this being the obvious way to save a file<br>
	 *   - the fact that libgphoto2 has been exporting all its internal<br>
	 *     symbols for years (until 2005-06)<br>
	 *   - our in-house frontends gphoto2 and gtkam using them<br>
	 * a number of external frontends started to use these functions, as<br>
	 * of 2005-06:<br>
	 *    - digikam<br>
	 *    - f-spot<br>
	 *    - gthumb<br>
	 * But a few frontends can live without it (and thus are likely to<br>
	 * use the correct API):<br>
	 *    - flphoto<br>
	 *    - kamera<br>
	 * So we're going to phase these functions out over the next year or<br>
	 * so, going the GTK way of keeping the ABI but breaking the API. So<br>
	 * we'll continue to export functionally equivalent functions, but the<br>
	 * header files will not contain definitions for you to use any more.<br>
	 * Original signature : <code>int gp_file_open(CameraFile*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:131</i>
	 */
	int gp_file_open(PointerByReference file, Pointer filename);
	/**
	 * Original signature : <code>int gp_file_save(CameraFile*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:132</i><br>
	 * @deprecated use the safer methods {@link #gp_file_save(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #gp_file_save(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_file_save(Pointer file, Pointer filename);
	/**
	 * Original signature : <code>int gp_file_save(CameraFile*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:132</i>
	 */
	int gp_file_save(PointerByReference file, String filename);
	/**
	 * Original signature : <code>int gp_file_save(CameraFile*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:132</i>
	 */
	int gp_file_save(PointerByReference file, Pointer filename);
	/**
	 * Original signature : <code>int gp_file_clean(CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:133</i><br>
	 * @deprecated use the safer method {@link #gp_file_clean(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_file_clean(Pointer file);
	/**
	 * Original signature : <code>int gp_file_clean(CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:133</i>
	 */
	int gp_file_clean(PointerByReference file);
	/**
	 * Original signature : <code>int gp_file_copy(CameraFile*, CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:134</i><br>
	 * @deprecated use the safer method {@link #gp_file_copy(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_file_copy(Pointer destination, Pointer source);
	/**
	 * Original signature : <code>int gp_file_copy(CameraFile*, CameraFile*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:134</i>
	 */
	int gp_file_copy(PointerByReference destination, PointerByReference source);
	/**
	 * These are for use by camera drivers only<br>
	 * Original signature : <code>int gp_file_append(CameraFile*, const char*, unsigned long long)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:138</i><br>
	 * @deprecated use the safer methods {@link #gp_file_append(com.sun.jna.ptr.PointerByReference, java.lang.String, long)} and {@link #gp_file_append(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, long)} instead
	 */
	@Deprecated 
	int gp_file_append(Pointer CameraFilePtr1, Pointer data, long size);
	/**
	 * These are for use by camera drivers only<br>
	 * Original signature : <code>int gp_file_append(CameraFile*, const char*, unsigned long long)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:138</i>
	 */
	int gp_file_append(PointerByReference CameraFilePtr1, String data, long size);
	/**
	 * These are for use by camera drivers only<br>
	 * Original signature : <code>int gp_file_append(CameraFile*, const char*, unsigned long long)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:138</i>
	 */
	int gp_file_append(PointerByReference CameraFilePtr1, Pointer data, long size);
	/**
	 * Original signature : <code>int gp_file_slurp(CameraFile*, char*, size_t, size_t*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:140</i><br>
	 * @deprecated use the safer methods {@link #gp_file_slurp(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.ochafik.lang.jnaerator.runtime.NativeSizeByReference)} and {@link #gp_file_slurp(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.ochafik.lang.jnaerator.runtime.NativeSizeByReference)} instead
	 */
	@Deprecated 
	int gp_file_slurp(Pointer CameraFilePtr1, Pointer data, NativeSize size, NativeSizeByReference readlen);
	/**
	 * Original signature : <code>int gp_file_slurp(CameraFile*, char*, size_t, size_t*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:140</i>
	 */
	int gp_file_slurp(PointerByReference CameraFilePtr1, ByteBuffer data, NativeSize size, NativeSizeByReference readlen);
	/**
	 * Original signature : <code>int gp_file_slurp(CameraFile*, char*, size_t, size_t*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-file.h:140</i>
	 */
	int gp_file_slurp(PointerByReference CameraFilePtr1, Pointer data, NativeSize size, NativeSizeByReference readlen);
	/**
	 * Original signature : <code>GPContext* gp_context_new()</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:15</i>
	 */
	PointerByReference gp_context_new();
	/**
	 * Original signature : <code>void gp_context_ref(GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:17</i><br>
	 * @deprecated use the safer method {@link #gp_context_ref(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void gp_context_ref(Pointer context);
	/**
	 * Original signature : <code>void gp_context_ref(GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:17</i>
	 */
	void gp_context_ref(PointerByReference context);
	/**
	 * Original signature : <code>void gp_context_unref(GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:18</i><br>
	 * @deprecated use the safer method {@link #gp_context_unref(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void gp_context_unref(Pointer context);
	/**
	 * Original signature : <code>void gp_context_unref(GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:18</i>
	 */
	void gp_context_unref(PointerByReference context);
	/**
	 * Setting those functions (frontends)<br>
	 * Original signature : <code>void gp_context_set_idle_func(GPContext*, GPContextIdleFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:54</i><br>
	 * @deprecated use the safer method {@link #gp_context_set_idle_func(com.sun.jna.ptr.PointerByReference, x.mvmn.gphoto2.jna.Gphoto2Library.GPContextIdleFunc, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void gp_context_set_idle_func(Pointer context, Gphoto2Library.GPContextIdleFunc func, Pointer data);
	/**
	 * Setting those functions (frontends)<br>
	 * Original signature : <code>void gp_context_set_idle_func(GPContext*, GPContextIdleFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:54</i>
	 */
	void gp_context_set_idle_func(PointerByReference context, Gphoto2Library.GPContextIdleFunc func, Pointer data);
	/**
	 * Original signature : <code>void gp_context_set_progress_funcs(GPContext*, GPContextProgressStartFunc, GPContextProgressUpdateFunc, GPContextProgressStopFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:56</i><br>
	 * @deprecated use the safer method {@link #gp_context_set_progress_funcs(com.sun.jna.ptr.PointerByReference, x.mvmn.gphoto2.jna.Gphoto2Library.GPContextProgressStartFunc, x.mvmn.gphoto2.jna.Gphoto2Library.GPContextProgressUpdateFunc, x.mvmn.gphoto2.jna.Gphoto2Library.GPContextProgressStopFunc, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void gp_context_set_progress_funcs(Pointer context, Gphoto2Library.GPContextProgressStartFunc start_func, Gphoto2Library.GPContextProgressUpdateFunc update_func, Gphoto2Library.GPContextProgressStopFunc stop_func, Pointer data);
	/**
	 * Original signature : <code>void gp_context_set_progress_funcs(GPContext*, GPContextProgressStartFunc, GPContextProgressUpdateFunc, GPContextProgressStopFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:56</i>
	 */
	void gp_context_set_progress_funcs(PointerByReference context, Gphoto2Library.GPContextProgressStartFunc start_func, Gphoto2Library.GPContextProgressUpdateFunc update_func, Gphoto2Library.GPContextProgressStopFunc stop_func, Pointer data);
	/**
	 * Original signature : <code>void gp_context_set_error_func(GPContext*, GPContextErrorFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:61</i><br>
	 * @deprecated use the safer method {@link #gp_context_set_error_func(com.sun.jna.ptr.PointerByReference, x.mvmn.gphoto2.jna.Gphoto2Library.GPContextErrorFunc, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void gp_context_set_error_func(Pointer context, Gphoto2Library.GPContextErrorFunc func, Pointer data);
	/**
	 * Original signature : <code>void gp_context_set_error_func(GPContext*, GPContextErrorFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:61</i>
	 */
	void gp_context_set_error_func(PointerByReference context, Gphoto2Library.GPContextErrorFunc func, Pointer data);
	/**
	 * Original signature : <code>void gp_context_set_status_func(GPContext*, GPContextStatusFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:63</i><br>
	 * @deprecated use the safer method {@link #gp_context_set_status_func(com.sun.jna.ptr.PointerByReference, x.mvmn.gphoto2.jna.Gphoto2Library.GPContextStatusFunc, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void gp_context_set_status_func(Pointer context, Gphoto2Library.GPContextStatusFunc func, Pointer data);
	/**
	 * Original signature : <code>void gp_context_set_status_func(GPContext*, GPContextStatusFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:63</i>
	 */
	void gp_context_set_status_func(PointerByReference context, Gphoto2Library.GPContextStatusFunc func, Pointer data);
	/**
	 * Original signature : <code>void gp_context_set_question_func(GPContext*, GPContextQuestionFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:65</i><br>
	 * @deprecated use the safer method {@link #gp_context_set_question_func(com.sun.jna.ptr.PointerByReference, x.mvmn.gphoto2.jna.Gphoto2Library.GPContextQuestionFunc, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void gp_context_set_question_func(Pointer context, Gphoto2Library.GPContextQuestionFunc func, Pointer data);
	/**
	 * Original signature : <code>void gp_context_set_question_func(GPContext*, GPContextQuestionFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:65</i>
	 */
	void gp_context_set_question_func(PointerByReference context, Gphoto2Library.GPContextQuestionFunc func, Pointer data);
	/**
	 * Original signature : <code>void gp_context_set_cancel_func(GPContext*, GPContextCancelFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:67</i><br>
	 * @deprecated use the safer method {@link #gp_context_set_cancel_func(com.sun.jna.ptr.PointerByReference, x.mvmn.gphoto2.jna.Gphoto2Library.GPContextCancelFunc, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void gp_context_set_cancel_func(Pointer context, Gphoto2Library.GPContextCancelFunc func, Pointer data);
	/**
	 * Original signature : <code>void gp_context_set_cancel_func(GPContext*, GPContextCancelFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:67</i>
	 */
	void gp_context_set_cancel_func(PointerByReference context, Gphoto2Library.GPContextCancelFunc func, Pointer data);
	/**
	 * Original signature : <code>void gp_context_set_message_func(GPContext*, GPContextMessageFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:69</i><br>
	 * @deprecated use the safer method {@link #gp_context_set_message_func(com.sun.jna.ptr.PointerByReference, x.mvmn.gphoto2.jna.Gphoto2Library.GPContextMessageFunc, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void gp_context_set_message_func(Pointer context, Gphoto2Library.GPContextMessageFunc func, Pointer data);
	/**
	 * Original signature : <code>void gp_context_set_message_func(GPContext*, GPContextMessageFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:69</i>
	 */
	void gp_context_set_message_func(PointerByReference context, Gphoto2Library.GPContextMessageFunc func, Pointer data);
	/**
	 * Calling those functions (backends)<br>
	 * Original signature : <code>void gp_context_idle(GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:73</i><br>
	 * @deprecated use the safer method {@link #gp_context_idle(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void gp_context_idle(Pointer context);
	/**
	 * Calling those functions (backends)<br>
	 * Original signature : <code>void gp_context_idle(GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:73</i>
	 */
	void gp_context_idle(PointerByReference context);
	/**
	 * Original signature : <code>void gp_context_error(GPContext*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:74</i><br>
	 * @deprecated use the safer methods {@link #gp_context_error(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.Object)} and {@link #gp_context_error(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	void gp_context_error(Pointer context, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>void gp_context_error(GPContext*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:74</i>
	 */
	void gp_context_error(PointerByReference context, String format, Object... varArgs1);
	/**
	 * Original signature : <code>void gp_context_error(GPContext*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:74</i>
	 */
	void gp_context_error(PointerByReference context, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>void gp_context_status(GPContext*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:79</i><br>
	 * @deprecated use the safer methods {@link #gp_context_status(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.Object)} and {@link #gp_context_status(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	void gp_context_status(Pointer context, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>void gp_context_status(GPContext*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:79</i>
	 */
	void gp_context_status(PointerByReference context, String format, Object... varArgs1);
	/**
	 * Original signature : <code>void gp_context_status(GPContext*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:79</i>
	 */
	void gp_context_status(PointerByReference context, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>void gp_context_message(GPContext*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:84</i><br>
	 * @deprecated use the safer methods {@link #gp_context_message(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.Object)} and {@link #gp_context_message(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	void gp_context_message(Pointer context, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>void gp_context_message(GPContext*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:84</i>
	 */
	void gp_context_message(PointerByReference context, String format, Object... varArgs1);
	/**
	 * Original signature : <code>void gp_context_message(GPContext*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:84</i>
	 */
	void gp_context_message(PointerByReference context, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>GPContextFeedback gp_context_question(GPContext*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:89</i><br>
	 * @deprecated use the safer methods {@link #gp_context_question(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.Object)} and {@link #gp_context_question(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	int gp_context_question(Pointer context, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>GPContextFeedback gp_context_question(GPContext*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:89</i>
	 */
	int gp_context_question(PointerByReference context, String format, Object... varArgs1);
	/**
	 * Original signature : <code>GPContextFeedback gp_context_question(GPContext*, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:89</i>
	 */
	int gp_context_question(PointerByReference context, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>GPContextFeedback gp_context_cancel(GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:95</i><br>
	 * @deprecated use the safer method {@link #gp_context_cancel(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_context_cancel(Pointer context);
	/**
	 * Original signature : <code>GPContextFeedback gp_context_cancel(GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:95</i>
	 */
	int gp_context_cancel(PointerByReference context);
	/**
	 * Original signature : <code>int gp_context_progress_start(GPContext*, float, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:96</i><br>
	 * @deprecated use the safer methods {@link #gp_context_progress_start(com.sun.jna.ptr.PointerByReference, float, java.lang.String, java.lang.Object)} and {@link #gp_context_progress_start(com.sun.jna.ptr.PointerByReference, float, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	int gp_context_progress_start(Pointer context, float target, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>int gp_context_progress_start(GPContext*, float, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:96</i>
	 */
	int gp_context_progress_start(PointerByReference context, float target, String format, Object... varArgs1);
	/**
	 * Original signature : <code>int gp_context_progress_start(GPContext*, float, const char*, null)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:96</i>
	 */
	int gp_context_progress_start(PointerByReference context, float target, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>void gp_context_progress_update(GPContext*, unsigned int, float)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:102</i><br>
	 * @deprecated use the safer method {@link #gp_context_progress_update(com.sun.jna.ptr.PointerByReference, int, float)} instead
	 */
	@Deprecated 
	void gp_context_progress_update(Pointer context, int id, float current);
	/**
	 * Original signature : <code>void gp_context_progress_update(GPContext*, unsigned int, float)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:102</i>
	 */
	void gp_context_progress_update(PointerByReference context, int id, float current);
	/**
	 * Original signature : <code>void gp_context_progress_stop(GPContext*, unsigned int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:104</i><br>
	 * @deprecated use the safer method {@link #gp_context_progress_stop(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void gp_context_progress_stop(Pointer context, int id);
	/**
	 * Original signature : <code>void gp_context_progress_stop(GPContext*, unsigned int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-context.h:104</i>
	 */
	void gp_context_progress_stop(PointerByReference context, int id);
	/**
	 * Original signature : <code>int gp_list_new(CameraList**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:68</i>
	 */
	int gp_list_new(PointerByReference list);
	/**
	 * Original signature : <code>int gp_list_ref(CameraList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:69</i><br>
	 * @deprecated use the safer method {@link #gp_list_ref(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_list_ref(Pointer list);
	/**
	 * Original signature : <code>int gp_list_ref(CameraList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:69</i>
	 */
	int gp_list_ref(PointerByReference list);
	/**
	 * Original signature : <code>int gp_list_unref(CameraList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:70</i><br>
	 * @deprecated use the safer method {@link #gp_list_unref(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_list_unref(Pointer list);
	/**
	 * Original signature : <code>int gp_list_unref(CameraList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:70</i>
	 */
	int gp_list_unref(PointerByReference list);
	/**
	 * Original signature : <code>int gp_list_free(CameraList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:71</i><br>
	 * @deprecated use the safer method {@link #gp_list_free(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_list_free(Pointer list);
	/**
	 * Original signature : <code>int gp_list_free(CameraList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:71</i>
	 */
	int gp_list_free(PointerByReference list);
	/**
	 * Original signature : <code>int gp_list_count(CameraList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:73</i><br>
	 * @deprecated use the safer method {@link #gp_list_count(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_list_count(Pointer list);
	/**
	 * Original signature : <code>int gp_list_count(CameraList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:73</i>
	 */
	int gp_list_count(PointerByReference list);
	/**
	 * Original signature : <code>int gp_list_append(CameraList*, const char*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:74</i><br>
	 * @deprecated use the safer methods {@link #gp_list_append(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #gp_list_append(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_list_append(Pointer list, Pointer name, Pointer value);
	/**
	 * Original signature : <code>int gp_list_append(CameraList*, const char*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:74</i>
	 */
	int gp_list_append(PointerByReference list, String name, String value);
	/**
	 * Original signature : <code>int gp_list_append(CameraList*, const char*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:74</i>
	 */
	int gp_list_append(PointerByReference list, Pointer name, Pointer value);
	/**
	 * Original signature : <code>int gp_list_reset(CameraList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:76</i><br>
	 * @deprecated use the safer method {@link #gp_list_reset(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_list_reset(Pointer list);
	/**
	 * Original signature : <code>int gp_list_reset(CameraList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:76</i>
	 */
	int gp_list_reset(PointerByReference list);
	/**
	 * Original signature : <code>int gp_list_sort(CameraList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:77</i><br>
	 * @deprecated use the safer method {@link #gp_list_sort(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_list_sort(Pointer list);
	/**
	 * Original signature : <code>int gp_list_sort(CameraList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:77</i>
	 */
	int gp_list_sort(PointerByReference list);
	/**
	 * Original signature : <code>int gp_list_find_by_name(CameraList*, int*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:79</i><br>
	 * @deprecated use the safer methods {@link #gp_list_find_by_name(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer, java.lang.String)} and {@link #gp_list_find_by_name(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_list_find_by_name(Pointer list, IntByReference index, Pointer name);
	/**
	 * Original signature : <code>int gp_list_find_by_name(CameraList*, int*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:79</i>
	 */
	int gp_list_find_by_name(PointerByReference list, IntBuffer index, String name);
	/**
	 * Original signature : <code>int gp_list_find_by_name(CameraList*, int*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:79</i>
	 */
	int gp_list_find_by_name(PointerByReference list, IntByReference index, Pointer name);
	/**
	 * Original signature : <code>int gp_list_get_name(CameraList*, int, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:81</i><br>
	 * @deprecated use the safer methods {@link #gp_list_get_name(com.sun.jna.ptr.PointerByReference, int, java.lang.String[])} and {@link #gp_list_get_name(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_list_get_name(Pointer list, int index, PointerByReference name);
	/**
	 * Original signature : <code>int gp_list_get_name(CameraList*, int, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:81</i>
	 */
	int gp_list_get_name(PointerByReference list, int index, String name[]);
	/**
	 * Original signature : <code>int gp_list_get_name(CameraList*, int, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:81</i>
	 */
	int gp_list_get_name(PointerByReference list, int index, PointerByReference name);
	/**
	 * Original signature : <code>int gp_list_get_value(CameraList*, int, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:82</i><br>
	 * @deprecated use the safer methods {@link #gp_list_get_value(com.sun.jna.ptr.PointerByReference, int, java.lang.String[])} and {@link #gp_list_get_value(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_list_get_value(Pointer list, int index, PointerByReference value);
	/**
	 * Original signature : <code>int gp_list_get_value(CameraList*, int, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:82</i>
	 */
	int gp_list_get_value(PointerByReference list, int index, String value[]);
	/**
	 * Original signature : <code>int gp_list_get_value(CameraList*, int, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:82</i>
	 */
	int gp_list_get_value(PointerByReference list, int index, PointerByReference value);
	/**
	 * Original signature : <code>int gp_list_set_name(CameraList*, int, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:84</i><br>
	 * @deprecated use the safer methods {@link #gp_list_set_name(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #gp_list_set_name(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_list_set_name(Pointer list, int index, Pointer name);
	/**
	 * Original signature : <code>int gp_list_set_name(CameraList*, int, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:84</i>
	 */
	int gp_list_set_name(PointerByReference list, int index, String name);
	/**
	 * Original signature : <code>int gp_list_set_name(CameraList*, int, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:84</i>
	 */
	int gp_list_set_name(PointerByReference list, int index, Pointer name);
	/**
	 * Original signature : <code>int gp_list_set_value(CameraList*, int, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:85</i><br>
	 * @deprecated use the safer methods {@link #gp_list_set_value(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #gp_list_set_value(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_list_set_value(Pointer list, int index, Pointer value);
	/**
	 * Original signature : <code>int gp_list_set_value(CameraList*, int, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:85</i>
	 */
	int gp_list_set_value(PointerByReference list, int index, String value);
	/**
	 * Original signature : <code>int gp_list_set_value(CameraList*, int, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:85</i>
	 */
	int gp_list_set_value(PointerByReference list, int index, Pointer value);
	/**
	 * Original signature : <code>int gp_list_populate(CameraList*, const char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:87</i><br>
	 * @deprecated use the safer methods {@link #gp_list_populate(com.sun.jna.ptr.PointerByReference, java.lang.String, int)} and {@link #gp_list_populate(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int gp_list_populate(Pointer list, Pointer format, int count);
	/**
	 * Original signature : <code>int gp_list_populate(CameraList*, const char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:87</i>
	 */
	int gp_list_populate(PointerByReference list, String format, int count);
	/**
	 * Original signature : <code>int gp_list_populate(CameraList*, const char*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-list.h:87</i>
	 */
	int gp_list_populate(PointerByReference list, Pointer format, int count);
	/**
	 * Original signature : <code>int gp_abilities_list_new(CameraAbilitiesList**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:133</i>
	 */
	int gp_abilities_list_new(PointerByReference list);
	/**
	 * Original signature : <code>int gp_abilities_list_free(CameraAbilitiesList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:134</i><br>
	 * @deprecated use the safer method {@link #gp_abilities_list_free(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_abilities_list_free(Pointer list);
	/**
	 * Original signature : <code>int gp_abilities_list_free(CameraAbilitiesList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:134</i>
	 */
	int gp_abilities_list_free(PointerByReference list);
	/**
	 * Original signature : <code>int gp_abilities_list_load(CameraAbilitiesList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:136</i><br>
	 * @deprecated use the safer method {@link #gp_abilities_list_load(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_abilities_list_load(Pointer list, Pointer context);
	/**
	 * Original signature : <code>int gp_abilities_list_load(CameraAbilitiesList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:136</i>
	 */
	int gp_abilities_list_load(PointerByReference list, PointerByReference context);
	/**
	 * Original signature : <code>int gp_abilities_list_load_dir(CameraAbilitiesList*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:137</i><br>
	 * @deprecated use the safer methods {@link #gp_abilities_list_load_dir(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_abilities_list_load_dir(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_abilities_list_load_dir(Pointer list, Pointer dir, Pointer context);
	/**
	 * Original signature : <code>int gp_abilities_list_load_dir(CameraAbilitiesList*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:137</i>
	 */
	int gp_abilities_list_load_dir(PointerByReference list, String dir, PointerByReference context);
	/**
	 * Original signature : <code>int gp_abilities_list_load_dir(CameraAbilitiesList*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:137</i>
	 */
	int gp_abilities_list_load_dir(PointerByReference list, Pointer dir, PointerByReference context);
	/**
	 * Original signature : <code>int gp_abilities_list_reset(CameraAbilitiesList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:138</i><br>
	 * @deprecated use the safer method {@link #gp_abilities_list_reset(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_abilities_list_reset(Pointer list);
	/**
	 * Original signature : <code>int gp_abilities_list_reset(CameraAbilitiesList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:138</i>
	 */
	int gp_abilities_list_reset(PointerByReference list);
	/**
	 * Original signature : <code>int gp_abilities_list_detect(CameraAbilitiesList*, GPPortInfoList*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:140</i><br>
	 * @deprecated use the safer method {@link #gp_abilities_list_detect(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_abilities_list_detect(Pointer list, Pointer info_list, Pointer l, Pointer context);
	/**
	 * Original signature : <code>int gp_abilities_list_detect(CameraAbilitiesList*, GPPortInfoList*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:140</i>
	 */
	int gp_abilities_list_detect(PointerByReference list, PointerByReference info_list, PointerByReference l, PointerByReference context);
	/**
	 * Original signature : <code>int gp_abilities_list_append(CameraAbilitiesList*, CameraAbilities)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:144</i><br>
	 * @deprecated use the safer method {@link #gp_abilities_list_append(com.sun.jna.ptr.PointerByReference, x.mvmn.gphoto2.jna.CameraAbilities.ByValue)} instead
	 */
	@Deprecated 
	int gp_abilities_list_append(Pointer list, CameraAbilities.ByValue abilities);
	/**
	 * Original signature : <code>int gp_abilities_list_append(CameraAbilitiesList*, CameraAbilities)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:144</i>
	 */
	int gp_abilities_list_append(PointerByReference list, CameraAbilities.ByValue abilities);
	/**
	 * Original signature : <code>int gp_abilities_list_count(CameraAbilitiesList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:147</i><br>
	 * @deprecated use the safer method {@link #gp_abilities_list_count(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_abilities_list_count(Pointer list);
	/**
	 * Original signature : <code>int gp_abilities_list_count(CameraAbilitiesList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:147</i>
	 */
	int gp_abilities_list_count(PointerByReference list);
	/**
	 * Original signature : <code>int gp_abilities_list_lookup_model(CameraAbilitiesList*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:149</i><br>
	 * @deprecated use the safer methods {@link #gp_abilities_list_lookup_model(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #gp_abilities_list_lookup_model(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_abilities_list_lookup_model(Pointer list, Pointer model);
	/**
	 * Original signature : <code>int gp_abilities_list_lookup_model(CameraAbilitiesList*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:149</i>
	 */
	int gp_abilities_list_lookup_model(PointerByReference list, String model);
	/**
	 * Original signature : <code>int gp_abilities_list_lookup_model(CameraAbilitiesList*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:149</i>
	 */
	int gp_abilities_list_lookup_model(PointerByReference list, Pointer model);
	/**
	 * Original signature : <code>int gp_abilities_list_get_abilities(CameraAbilitiesList*, int, CameraAbilities*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:152</i><br>
	 * @deprecated use the safer method {@link #gp_abilities_list_get_abilities(com.sun.jna.ptr.PointerByReference, int, x.mvmn.gphoto2.jna.CameraAbilities)} instead
	 */
	@Deprecated 
	int gp_abilities_list_get_abilities(Pointer list, int index, CameraAbilities abilities);
	/**
	 * Original signature : <code>int gp_abilities_list_get_abilities(CameraAbilitiesList*, int, CameraAbilities*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:152</i>
	 */
	int gp_abilities_list_get_abilities(PointerByReference list, int index, CameraAbilities abilities);
	/**
	 * Original signature : <code>char* gp_message_codeset(const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:155</i><br>
	 * @deprecated use the safer methods {@link #gp_message_codeset(java.lang.String)} and {@link #gp_message_codeset(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	String gp_message_codeset(Pointer charPtr1);
	/**
	 * Original signature : <code>char* gp_message_codeset(const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:155</i>
	 */
	String gp_message_codeset(String charPtr1);
	/**
	 * Original signature : <code>int gp_init_localedir(const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:157</i><br>
	 * @deprecated use the safer methods {@link #gp_init_localedir(java.lang.String)} and {@link #gp_init_localedir(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_init_localedir(Pointer localedir);
	/**
	 * Original signature : <code>int gp_init_localedir(const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-abilities-list.h:157</i>
	 */
	int gp_init_localedir(String localedir);
	/**
	 * Original signature : <code>int gp_widget_new(CameraWidgetType, const char*, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:31</i><br>
	 * @deprecated use the safer methods {@link #gp_widget_new(int, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_widget_new(int, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_new(int type, Pointer label, PointerByReference widget);
	/**
	 * Original signature : <code>int gp_widget_new(CameraWidgetType, const char*, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:31</i>
	 */
	int gp_widget_new(int type, String label, PointerByReference widget);
	/**
	 * Original signature : <code>int gp_widget_free(CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:33</i><br>
	 * @deprecated use the safer method {@link #gp_widget_free(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_free(Pointer widget);
	/**
	 * Original signature : <code>int gp_widget_free(CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:33</i>
	 */
	int gp_widget_free(PointerByReference widget);
	/**
	 * Original signature : <code>int gp_widget_ref(CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:34</i><br>
	 * @deprecated use the safer method {@link #gp_widget_ref(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_ref(Pointer widget);
	/**
	 * Original signature : <code>int gp_widget_ref(CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:34</i>
	 */
	int gp_widget_ref(PointerByReference widget);
	/**
	 * Original signature : <code>int gp_widget_unref(CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:35</i><br>
	 * @deprecated use the safer method {@link #gp_widget_unref(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_unref(Pointer widget);
	/**
	 * Original signature : <code>int gp_widget_unref(CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:35</i>
	 */
	int gp_widget_unref(PointerByReference widget);
	/**
	 * Original signature : <code>int gp_widget_append(CameraWidget*, CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:37</i><br>
	 * @deprecated use the safer method {@link #gp_widget_append(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_append(Pointer widget, Pointer child);
	/**
	 * Original signature : <code>int gp_widget_append(CameraWidget*, CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:37</i>
	 */
	int gp_widget_append(PointerByReference widget, PointerByReference child);
	/**
	 * Original signature : <code>int gp_widget_prepend(CameraWidget*, CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:38</i><br>
	 * @deprecated use the safer method {@link #gp_widget_prepend(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_prepend(Pointer widget, Pointer child);
	/**
	 * Original signature : <code>int gp_widget_prepend(CameraWidget*, CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:38</i>
	 */
	int gp_widget_prepend(PointerByReference widget, PointerByReference child);
	/**
	 * Original signature : <code>int gp_widget_count_children(CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:40</i><br>
	 * @deprecated use the safer method {@link #gp_widget_count_children(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_count_children(Pointer widget);
	/**
	 * Original signature : <code>int gp_widget_count_children(CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:40</i>
	 */
	int gp_widget_count_children(PointerByReference widget);
	/**
	 * Original signature : <code>int gp_widget_get_child(CameraWidget*, int, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:41</i><br>
	 * @deprecated use the safer method {@link #gp_widget_get_child(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_get_child(Pointer widget, int child_number, PointerByReference child);
	/**
	 * Original signature : <code>int gp_widget_get_child(CameraWidget*, int, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:41</i>
	 */
	int gp_widget_get_child(PointerByReference widget, int child_number, PointerByReference child);
	/**
	 * Retrieve Widgets<br>
	 * Original signature : <code>int gp_widget_get_child_by_label(CameraWidget*, const char*, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:45</i><br>
	 * @deprecated use the safer methods {@link #gp_widget_get_child_by_label(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_widget_get_child_by_label(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_get_child_by_label(Pointer widget, Pointer label, PointerByReference child);
	/**
	 * Retrieve Widgets<br>
	 * Original signature : <code>int gp_widget_get_child_by_label(CameraWidget*, const char*, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:45</i>
	 */
	int gp_widget_get_child_by_label(PointerByReference widget, String label, PointerByReference child);
	/**
	 * Retrieve Widgets<br>
	 * Original signature : <code>int gp_widget_get_child_by_label(CameraWidget*, const char*, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:45</i>
	 */
	int gp_widget_get_child_by_label(PointerByReference widget, Pointer label, PointerByReference child);
	/**
	 * Original signature : <code>int gp_widget_get_child_by_id(CameraWidget*, int, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:48</i><br>
	 * @deprecated use the safer method {@link #gp_widget_get_child_by_id(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_get_child_by_id(Pointer widget, int id, PointerByReference child);
	/**
	 * Original signature : <code>int gp_widget_get_child_by_id(CameraWidget*, int, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:48</i>
	 */
	int gp_widget_get_child_by_id(PointerByReference widget, int id, PointerByReference child);
	/**
	 * Original signature : <code>int gp_widget_get_child_by_name(CameraWidget*, const char*, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:50</i><br>
	 * @deprecated use the safer methods {@link #gp_widget_get_child_by_name(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_widget_get_child_by_name(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_get_child_by_name(Pointer widget, Pointer name, PointerByReference child);
	/**
	 * Original signature : <code>int gp_widget_get_child_by_name(CameraWidget*, const char*, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:50</i>
	 */
	int gp_widget_get_child_by_name(PointerByReference widget, String name, PointerByReference child);
	/**
	 * Original signature : <code>int gp_widget_get_child_by_name(CameraWidget*, const char*, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:50</i>
	 */
	int gp_widget_get_child_by_name(PointerByReference widget, Pointer name, PointerByReference child);
	/**
	 * Original signature : <code>int gp_widget_get_root(CameraWidget*, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:53</i><br>
	 * @deprecated use the safer method {@link #gp_widget_get_root(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_get_root(Pointer widget, PointerByReference root);
	/**
	 * Original signature : <code>int gp_widget_get_root(CameraWidget*, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:53</i>
	 */
	int gp_widget_get_root(PointerByReference widget, PointerByReference root);
	/**
	 * Original signature : <code>int gp_widget_get_parent(CameraWidget*, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:55</i><br>
	 * @deprecated use the safer method {@link #gp_widget_get_parent(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_get_parent(Pointer widget, PointerByReference parent);
	/**
	 * Original signature : <code>int gp_widget_get_parent(CameraWidget*, CameraWidget**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:55</i>
	 */
	int gp_widget_get_parent(PointerByReference widget, PointerByReference parent);
	/**
	 * Original signature : <code>int gp_widget_set_value(CameraWidget*, const void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:58</i><br>
	 * @deprecated use the safer method {@link #gp_widget_set_value(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_widget_set_value(Pointer widget, Pointer value);
	/**
	 * Original signature : <code>int gp_widget_set_value(CameraWidget*, const void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:58</i>
	 */
	int gp_widget_set_value(PointerByReference widget, Pointer value);
	/**
	 * Original signature : <code>int gp_widget_get_value(CameraWidget*, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:59</i><br>
	 * @deprecated use the safer method {@link #gp_widget_get_value(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_widget_get_value(Pointer widget, Pointer value);
	/**
	 * Original signature : <code>int gp_widget_get_value(CameraWidget*, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:59</i>
	 */
	int gp_widget_get_value(PointerByReference widget, Pointer value);
	/**
	 * Original signature : <code>int gp_widget_set_name(CameraWidget*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:61</i><br>
	 * @deprecated use the safer methods {@link #gp_widget_set_name(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #gp_widget_set_name(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_widget_set_name(Pointer widget, Pointer name);
	/**
	 * Original signature : <code>int gp_widget_set_name(CameraWidget*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:61</i>
	 */
	int gp_widget_set_name(PointerByReference widget, String name);
	/**
	 * Original signature : <code>int gp_widget_set_name(CameraWidget*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:61</i>
	 */
	int gp_widget_set_name(PointerByReference widget, Pointer name);
	/**
	 * Original signature : <code>int gp_widget_get_name(CameraWidget*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:62</i><br>
	 * @deprecated use the safer methods {@link #gp_widget_get_name(com.sun.jna.ptr.PointerByReference, java.lang.String[])} and {@link #gp_widget_get_name(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_get_name(Pointer widget, PointerByReference name);
	/**
	 * Original signature : <code>int gp_widget_get_name(CameraWidget*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:62</i>
	 */
	int gp_widget_get_name(PointerByReference widget, String name[]);
	/**
	 * Original signature : <code>int gp_widget_get_name(CameraWidget*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:62</i>
	 */
	int gp_widget_get_name(PointerByReference widget, PointerByReference name);
	/**
	 * Original signature : <code>int gp_widget_set_info(CameraWidget*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:64</i><br>
	 * @deprecated use the safer methods {@link #gp_widget_set_info(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #gp_widget_set_info(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_widget_set_info(Pointer widget, Pointer info);
	/**
	 * Original signature : <code>int gp_widget_set_info(CameraWidget*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:64</i>
	 */
	int gp_widget_set_info(PointerByReference widget, String info);
	/**
	 * Original signature : <code>int gp_widget_set_info(CameraWidget*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:64</i>
	 */
	int gp_widget_set_info(PointerByReference widget, Pointer info);
	/**
	 * Original signature : <code>int gp_widget_get_info(CameraWidget*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:65</i><br>
	 * @deprecated use the safer methods {@link #gp_widget_get_info(com.sun.jna.ptr.PointerByReference, java.lang.String[])} and {@link #gp_widget_get_info(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_get_info(Pointer widget, PointerByReference info);
	/**
	 * Original signature : <code>int gp_widget_get_info(CameraWidget*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:65</i>
	 */
	int gp_widget_get_info(PointerByReference widget, String info[]);
	/**
	 * Original signature : <code>int gp_widget_get_info(CameraWidget*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:65</i>
	 */
	int gp_widget_get_info(PointerByReference widget, PointerByReference info);
	/**
	 * Original signature : <code>int gp_widget_get_id(CameraWidget*, int*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:67</i><br>
	 * @deprecated use the safer methods {@link #gp_widget_get_id(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #gp_widget_get_id(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int gp_widget_get_id(Pointer widget, IntByReference id);
	/**
	 * Original signature : <code>int gp_widget_get_id(CameraWidget*, int*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:67</i>
	 */
	int gp_widget_get_id(PointerByReference widget, IntBuffer id);
	/**
	 * Original signature : <code>int gp_widget_get_id(CameraWidget*, int*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:67</i>
	 */
	int gp_widget_get_id(PointerByReference widget, IntByReference id);
	/**
	 * Original signature : <code>int gp_widget_get_type(CameraWidget*, CameraWidgetType*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:68</i><br>
	 * @deprecated use the safer methods {@link #gp_widget_get_type(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #gp_widget_get_type(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int gp_widget_get_type(Pointer widget, IntByReference type);
	/**
	 * Original signature : <code>int gp_widget_get_type(CameraWidget*, CameraWidgetType*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:68</i>
	 */
	int gp_widget_get_type(PointerByReference widget, IntBuffer type);
	/**
	 * Original signature : <code>int gp_widget_get_type(CameraWidget*, CameraWidgetType*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:68</i>
	 */
	int gp_widget_get_type(PointerByReference widget, IntByReference type);
	/**
	 * Original signature : <code>int gp_widget_get_label(CameraWidget*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:69</i><br>
	 * @deprecated use the safer methods {@link #gp_widget_get_label(com.sun.jna.ptr.PointerByReference, java.lang.String[])} and {@link #gp_widget_get_label(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_get_label(Pointer widget, PointerByReference label);
	/**
	 * Original signature : <code>int gp_widget_get_label(CameraWidget*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:69</i>
	 */
	int gp_widget_get_label(PointerByReference widget, String label[]);
	/**
	 * Original signature : <code>int gp_widget_get_label(CameraWidget*, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:69</i>
	 */
	int gp_widget_get_label(PointerByReference widget, PointerByReference label);
	/**
	 * Original signature : <code>int gp_widget_set_range(CameraWidget*, float, float, float)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:71</i><br>
	 * @deprecated use the safer method {@link #gp_widget_set_range(com.sun.jna.ptr.PointerByReference, float, float, float)} instead
	 */
	@Deprecated 
	int gp_widget_set_range(Pointer range, float low, float high, float increment);
	/**
	 * Original signature : <code>int gp_widget_set_range(CameraWidget*, float, float, float)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:71</i>
	 */
	int gp_widget_set_range(PointerByReference range, float low, float high, float increment);
	/**
	 * Original signature : <code>int gp_widget_get_range(CameraWidget*, float*, float*, float*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:73</i><br>
	 * @deprecated use the safer methods {@link #gp_widget_get_range(com.sun.jna.ptr.PointerByReference, java.nio.FloatBuffer, java.nio.FloatBuffer, java.nio.FloatBuffer)} and {@link #gp_widget_get_range(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.FloatByReference, com.sun.jna.ptr.FloatByReference, com.sun.jna.ptr.FloatByReference)} instead
	 */
	@Deprecated 
	int gp_widget_get_range(Pointer range, FloatByReference min, FloatByReference max, FloatByReference increment);
	/**
	 * Original signature : <code>int gp_widget_get_range(CameraWidget*, float*, float*, float*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:73</i>
	 */
	int gp_widget_get_range(PointerByReference range, FloatBuffer min, FloatBuffer max, FloatBuffer increment);
	/**
	 * Original signature : <code>int gp_widget_get_range(CameraWidget*, float*, float*, float*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:73</i>
	 */
	int gp_widget_get_range(PointerByReference range, FloatByReference min, FloatByReference max, FloatByReference increment);
	/**
	 * Original signature : <code>int gp_widget_add_choice(CameraWidget*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:76</i><br>
	 * @deprecated use the safer methods {@link #gp_widget_add_choice(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #gp_widget_add_choice(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_widget_add_choice(Pointer widget, Pointer choice);
	/**
	 * Original signature : <code>int gp_widget_add_choice(CameraWidget*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:76</i>
	 */
	int gp_widget_add_choice(PointerByReference widget, String choice);
	/**
	 * Original signature : <code>int gp_widget_add_choice(CameraWidget*, const char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:76</i>
	 */
	int gp_widget_add_choice(PointerByReference widget, Pointer choice);
	/**
	 * Original signature : <code>int gp_widget_count_choices(CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:77</i><br>
	 * @deprecated use the safer method {@link #gp_widget_count_choices(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_count_choices(Pointer widget);
	/**
	 * Original signature : <code>int gp_widget_count_choices(CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:77</i>
	 */
	int gp_widget_count_choices(PointerByReference widget);
	/**
	 * Original signature : <code>int gp_widget_get_choice(CameraWidget*, int, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:78</i><br>
	 * @deprecated use the safer methods {@link #gp_widget_get_choice(com.sun.jna.ptr.PointerByReference, int, java.lang.String[])} and {@link #gp_widget_get_choice(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_get_choice(Pointer widget, int choice_number, PointerByReference choice);
	/**
	 * Original signature : <code>int gp_widget_get_choice(CameraWidget*, int, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:78</i>
	 */
	int gp_widget_get_choice(PointerByReference widget, int choice_number, String choice[]);
	/**
	 * Original signature : <code>int gp_widget_get_choice(CameraWidget*, int, const char**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:78</i>
	 */
	int gp_widget_get_choice(PointerByReference widget, int choice_number, PointerByReference choice);
	/**
	 * Original signature : <code>int gp_widget_changed(CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:81</i><br>
	 * @deprecated use the safer method {@link #gp_widget_changed(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_widget_changed(Pointer widget);
	/**
	 * Original signature : <code>int gp_widget_changed(CameraWidget*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:81</i>
	 */
	int gp_widget_changed(PointerByReference widget);
	/**
	 * Original signature : <code>int gp_widget_set_changed(CameraWidget*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:82</i><br>
	 * @deprecated use the safer method {@link #gp_widget_set_changed(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int gp_widget_set_changed(Pointer widget, int changed);
	/**
	 * Original signature : <code>int gp_widget_set_changed(CameraWidget*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:82</i>
	 */
	int gp_widget_set_changed(PointerByReference widget, int changed);
	/**
	 * Original signature : <code>int gp_widget_set_readonly(CameraWidget*, readonly int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:84</i><br>
	 * @deprecated use the safer method {@link #gp_widget_set_readonly(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int gp_widget_set_readonly(Pointer widget, int int1);
	/**
	 * Original signature : <code>int gp_widget_set_readonly(CameraWidget*, readonly int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-widget.h:84</i>
	 */
	int gp_widget_set_readonly(PointerByReference widget, int int1);
	/**
	 * Original signature : <code>int gp_filesystem_new(CameraFilesystem**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:198</i>
	 */
	int gp_filesystem_new(PointerByReference fs);
	/**
	 * Original signature : <code>int gp_filesystem_free(CameraFilesystem*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:199</i><br>
	 * @deprecated use the safer method {@link #gp_filesystem_free(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_free(Pointer fs);
	/**
	 * Original signature : <code>int gp_filesystem_free(CameraFilesystem*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:199</i>
	 */
	int gp_filesystem_free(PointerByReference fs);
	/**
	 * Manual editing<br>
	 * Original signature : <code>int gp_filesystem_append(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:202</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_append(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_append(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_append(Pointer fs, Pointer folder, Pointer filename, Pointer context);
	/**
	 * Manual editing<br>
	 * Original signature : <code>int gp_filesystem_append(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:202</i>
	 */
	int gp_filesystem_append(PointerByReference fs, String folder, String filename, PointerByReference context);
	/**
	 * Manual editing<br>
	 * Original signature : <code>int gp_filesystem_append(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:202</i>
	 */
	int gp_filesystem_append(PointerByReference fs, Pointer folder, Pointer filename, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_set_info_noop(CameraFilesystem*, const char*, const char*, CameraFileInfo, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:204</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_set_info_noop(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, x.mvmn.gphoto2.jna.CameraFileInfo.ByValue, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_set_info_noop(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, x.mvmn.gphoto2.jna.CameraFileInfo.ByValue, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_set_info_noop(Pointer fs, Pointer folder, Pointer filename, CameraFileInfo.ByValue info, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_set_info_noop(CameraFilesystem*, const char*, const char*, CameraFileInfo, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:204</i>
	 */
	int gp_filesystem_set_info_noop(PointerByReference fs, String folder, String filename, CameraFileInfo.ByValue info, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_set_info_noop(CameraFilesystem*, const char*, const char*, CameraFileInfo, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:204</i>
	 */
	int gp_filesystem_set_info_noop(PointerByReference fs, Pointer folder, Pointer filename, CameraFileInfo.ByValue info, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_set_info_dirty(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:207</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_set_info_dirty(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_set_info_dirty(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_set_info_dirty(Pointer fs, Pointer folder, Pointer filename, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_set_info_dirty(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:207</i>
	 */
	int gp_filesystem_set_info_dirty(PointerByReference fs, String folder, String filename, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_set_info_dirty(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:207</i>
	 */
	int gp_filesystem_set_info_dirty(PointerByReference fs, Pointer folder, Pointer filename, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_set_file_noop(CameraFilesystem*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:210</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_set_file_noop(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_set_file_noop(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_set_file_noop(Pointer fs, Pointer folder, Pointer filename, int type, Pointer file, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_set_file_noop(CameraFilesystem*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:210</i>
	 */
	int gp_filesystem_set_file_noop(PointerByReference fs, String folder, String filename, int type, PointerByReference file, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_set_file_noop(CameraFilesystem*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:210</i>
	 */
	int gp_filesystem_set_file_noop(PointerByReference fs, Pointer folder, Pointer filename, int type, PointerByReference file, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_delete_file_noop(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:214</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_delete_file_noop(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_delete_file_noop(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_delete_file_noop(Pointer fs, Pointer folder, Pointer filename, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_delete_file_noop(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:214</i>
	 */
	int gp_filesystem_delete_file_noop(PointerByReference fs, String folder, String filename, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_delete_file_noop(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:214</i>
	 */
	int gp_filesystem_delete_file_noop(PointerByReference fs, Pointer folder, Pointer filename, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_reset(CameraFilesystem*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:216</i><br>
	 * @deprecated use the safer method {@link #gp_filesystem_reset(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_reset(Pointer fs);
	/**
	 * Original signature : <code>int gp_filesystem_reset(CameraFilesystem*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:216</i>
	 */
	int gp_filesystem_reset(PointerByReference fs);
	/**
	 * Information retrieval<br>
	 * Original signature : <code>int gp_filesystem_count(CameraFilesystem*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:219</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_count(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_count(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_count(Pointer fs, Pointer folder, Pointer context);
	/**
	 * Information retrieval<br>
	 * Original signature : <code>int gp_filesystem_count(CameraFilesystem*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:219</i>
	 */
	int gp_filesystem_count(PointerByReference fs, String folder, PointerByReference context);
	/**
	 * Information retrieval<br>
	 * Original signature : <code>int gp_filesystem_count(CameraFilesystem*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:219</i>
	 */
	int gp_filesystem_count(PointerByReference fs, Pointer folder, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_name(CameraFilesystem*, const char*, int, const char**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:221</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_name(com.sun.jna.ptr.PointerByReference, java.lang.String, int, java.lang.String[], com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_name(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_name(Pointer fs, Pointer folder, int filenumber, PointerByReference filename, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_name(CameraFilesystem*, const char*, int, const char**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:221</i>
	 */
	int gp_filesystem_name(PointerByReference fs, String folder, int filenumber, String filename[], PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_name(CameraFilesystem*, const char*, int, const char**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:221</i>
	 */
	int gp_filesystem_name(PointerByReference fs, Pointer folder, int filenumber, PointerByReference filename, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_get_folder(CameraFilesystem*, const char*, char**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:224</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_get_folder(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_get_folder(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_get_folder(Pointer fs, Pointer filename, PointerByReference folder, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_get_folder(CameraFilesystem*, const char*, char**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:224</i>
	 */
	int gp_filesystem_get_folder(PointerByReference fs, String filename, PointerByReference folder, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_get_folder(CameraFilesystem*, const char*, char**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:224</i>
	 */
	int gp_filesystem_get_folder(PointerByReference fs, Pointer filename, PointerByReference folder, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_number(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:226</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_number(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_number(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_number(Pointer fs, Pointer folder, Pointer filename, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_number(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:226</i>
	 */
	int gp_filesystem_number(PointerByReference fs, String folder, String filename, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_number(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:226</i>
	 */
	int gp_filesystem_number(PointerByReference fs, Pointer folder, Pointer filename, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_list_files(CameraFilesystem*, const char*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:233</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_list_files(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_list_files(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_list_files(Pointer fs, Pointer folder, Pointer list, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_list_files(CameraFilesystem*, const char*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:233</i>
	 */
	int gp_filesystem_list_files(PointerByReference fs, String folder, PointerByReference list, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_list_files(CameraFilesystem*, const char*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:233</i>
	 */
	int gp_filesystem_list_files(PointerByReference fs, Pointer folder, PointerByReference list, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_list_folders(CameraFilesystem*, const char*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:235</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_list_folders(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_list_folders(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_list_folders(Pointer fs, Pointer folder, Pointer list, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_list_folders(CameraFilesystem*, const char*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:235</i>
	 */
	int gp_filesystem_list_folders(PointerByReference fs, String folder, PointerByReference list, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_list_folders(CameraFilesystem*, const char*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:235</i>
	 */
	int gp_filesystem_list_folders(PointerByReference fs, Pointer folder, PointerByReference list, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_get_info(CameraFilesystem*, const char*, const char*, CameraFileInfo*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:249</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_get_info(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, x.mvmn.gphoto2.jna.CameraFileInfo, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_get_info(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, x.mvmn.gphoto2.jna.CameraFileInfo, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_get_info(Pointer fs, Pointer folder, Pointer filename, CameraFileInfo info, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_get_info(CameraFilesystem*, const char*, const char*, CameraFileInfo*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:249</i>
	 */
	int gp_filesystem_get_info(PointerByReference fs, String folder, String filename, CameraFileInfo info, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_get_info(CameraFilesystem*, const char*, const char*, CameraFileInfo*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:249</i>
	 */
	int gp_filesystem_get_info(PointerByReference fs, Pointer folder, Pointer filename, CameraFileInfo info, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_set_info(CameraFilesystem*, const char*, const char*, CameraFileInfo, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:252</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_set_info(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, x.mvmn.gphoto2.jna.CameraFileInfo.ByValue, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_set_info(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, x.mvmn.gphoto2.jna.CameraFileInfo.ByValue, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_set_info(Pointer fs, Pointer folder, Pointer filename, CameraFileInfo.ByValue info, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_set_info(CameraFilesystem*, const char*, const char*, CameraFileInfo, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:252</i>
	 */
	int gp_filesystem_set_info(PointerByReference fs, String folder, String filename, CameraFileInfo.ByValue info, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_set_info(CameraFilesystem*, const char*, const char*, CameraFileInfo, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:252</i>
	 */
	int gp_filesystem_set_info(PointerByReference fs, Pointer folder, Pointer filename, CameraFileInfo.ByValue info, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_get_file(CameraFilesystem*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:276</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_get_file(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_get_file(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_get_file(Pointer fs, Pointer folder, Pointer filename, int type, Pointer file, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_get_file(CameraFilesystem*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:276</i>
	 */
	int gp_filesystem_get_file(PointerByReference fs, String folder, String filename, int type, PointerByReference file, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_get_file(CameraFilesystem*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:276</i>
	 */
	int gp_filesystem_get_file(PointerByReference fs, Pointer folder, Pointer filename, int type, PointerByReference file, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_read_file(CameraFilesystem*, const char*, const char*, CameraFileType, uint64_t, char*, uint64_t*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:279</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_read_file(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, int, long, java.nio.ByteBuffer, java.nio.LongBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_read_file(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, int, long, com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_read_file(Pointer fs, Pointer folder, Pointer filename, int type, long offset, Pointer buf, LongByReference size, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_read_file(CameraFilesystem*, const char*, const char*, CameraFileType, uint64_t, char*, uint64_t*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:279</i>
	 */
	int gp_filesystem_read_file(PointerByReference fs, String folder, String filename, int type, long offset, ByteBuffer buf, LongBuffer size, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_read_file(CameraFilesystem*, const char*, const char*, CameraFileType, uint64_t, char*, uint64_t*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:279</i>
	 */
	int gp_filesystem_read_file(PointerByReference fs, Pointer folder, Pointer filename, int type, long offset, Pointer buf, LongByReference size, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_delete_file(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:283</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_delete_file(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_delete_file(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_delete_file(Pointer fs, Pointer folder, Pointer filename, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_delete_file(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:283</i>
	 */
	int gp_filesystem_delete_file(PointerByReference fs, String folder, String filename, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_delete_file(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:283</i>
	 */
	int gp_filesystem_delete_file(PointerByReference fs, Pointer folder, Pointer filename, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_get_storageinfo(CameraFilesystem*, CameraStorageInformation**, int*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:307</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_get_storageinfo(com.sun.jna.ptr.PointerByReference, x.mvmn.gphoto2.jna.CameraStorageInformation.ByReference[], java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_get_storageinfo(com.sun.jna.ptr.PointerByReference, x.mvmn.gphoto2.jna.CameraStorageInformation.ByReference[], com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_get_storageinfo(Pointer fs, PointerByReference CameraStorageInformationPtrPtr1, IntByReference nrofstorageinformations, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_get_storageinfo(CameraFilesystem*, CameraStorageInformation**, int*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:307</i>
	 */
	int gp_filesystem_get_storageinfo(PointerByReference fs, x.mvmn.gphoto2.jna.CameraStorageInformation.ByReference CameraStorageInformationPtrPtr1[], IntBuffer nrofstorageinformations, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_get_storageinfo(CameraFilesystem*, CameraStorageInformation**, int*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:307</i>
	 */
	int gp_filesystem_get_storageinfo(PointerByReference fs, x.mvmn.gphoto2.jna.CameraStorageInformation.ByReference CameraStorageInformationPtrPtr1[], IntByReference nrofstorageinformations, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_set_funcs(CameraFilesystem*, CameraFilesystemFuncs*, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:330</i><br>
	 * @deprecated use the safer method {@link #gp_filesystem_set_funcs(com.sun.jna.ptr.PointerByReference, x.mvmn.gphoto2.jna.CameraFilesystemFuncs, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_filesystem_set_funcs(Pointer fs, CameraFilesystemFuncs funcs, Pointer data);
	/**
	 * Original signature : <code>int gp_filesystem_set_funcs(CameraFilesystem*, CameraFilesystemFuncs*, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:330</i>
	 */
	int gp_filesystem_set_funcs(PointerByReference fs, CameraFilesystemFuncs funcs, Pointer data);
	/**
	 * Original signature : <code>int gp_filesystem_put_file(CameraFilesystem*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:333</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_put_file(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_put_file(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_put_file(Pointer fs, Pointer folder, Pointer filename, int type, Pointer file, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_put_file(CameraFilesystem*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:333</i>
	 */
	int gp_filesystem_put_file(PointerByReference fs, String folder, String filename, int type, PointerByReference file, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_put_file(CameraFilesystem*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:333</i>
	 */
	int gp_filesystem_put_file(PointerByReference fs, Pointer folder, Pointer filename, int type, PointerByReference file, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_delete_all(CameraFilesystem*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:335</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_delete_all(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_delete_all(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_delete_all(Pointer fs, Pointer folder, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_delete_all(CameraFilesystem*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:335</i>
	 */
	int gp_filesystem_delete_all(PointerByReference fs, String folder, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_delete_all(CameraFilesystem*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:335</i>
	 */
	int gp_filesystem_delete_all(PointerByReference fs, Pointer folder, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_make_dir(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:337</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_make_dir(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_make_dir(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_make_dir(Pointer fs, Pointer folder, Pointer name, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_make_dir(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:337</i>
	 */
	int gp_filesystem_make_dir(PointerByReference fs, String folder, String name, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_make_dir(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:337</i>
	 */
	int gp_filesystem_make_dir(PointerByReference fs, Pointer folder, Pointer name, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_remove_dir(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:339</i><br>
	 * @deprecated use the safer methods {@link #gp_filesystem_remove_dir(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_filesystem_remove_dir(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_remove_dir(Pointer fs, Pointer folder, Pointer name, Pointer context);
	/**
	 * Original signature : <code>int gp_filesystem_remove_dir(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:339</i>
	 */
	int gp_filesystem_remove_dir(PointerByReference fs, String folder, String name, PointerByReference context);
	/**
	 * Original signature : <code>int gp_filesystem_remove_dir(CameraFilesystem*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:339</i>
	 */
	int gp_filesystem_remove_dir(PointerByReference fs, Pointer folder, Pointer name, PointerByReference context);
	/**
	 * For debugging<br>
	 * Original signature : <code>int gp_filesystem_dump(CameraFilesystem*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:343</i><br>
	 * @deprecated use the safer method {@link #gp_filesystem_dump(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_filesystem_dump(Pointer fs);
	/**
	 * For debugging<br>
	 * Original signature : <code>int gp_filesystem_dump(CameraFilesystem*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-filesys.h:343</i>
	 */
	int gp_filesystem_dump(PointerByReference fs);
	/**
	 * \brief Not enough space<br>
	 * There was not enough free space when uploading a file.<br>
	 * Original signature : <code>char* gp_result_as_string(int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-result.h:107</i>
	 */
	String gp_result_as_string(int result);
	/**
	 * Create a new camera device.<br>
	 * Original signature : <code>int gp_camera_new(Camera**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:337</i><br>
	 * @deprecated use the safer method {@link #gp_camera_new(x.mvmn.gphoto2.jna.Camera.ByReference[])} instead
	 */
	@Deprecated 
	int gp_camera_new(PointerByReference camera);
	/**
	 * Create a new camera device.<br>
	 * Original signature : <code>int gp_camera_new(Camera**)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:337</i>
	 */
	int gp_camera_new(Camera.ByReference camera[]);
	/**
	 * \name Preparing initialization<br>
	 * @{<br>
	 * Original signature : <code>int gp_camera_set_abilities(Camera*, CameraAbilities)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:343</i>
	 */
	int gp_camera_set_abilities(Camera camera, CameraAbilities.ByValue abilities);
	/**
	 * Original signature : <code>int gp_camera_get_abilities(Camera*, CameraAbilities*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:344</i>
	 */
	int gp_camera_get_abilities(Camera camera, CameraAbilities abilities);
	/**
	 * Original signature : <code>int gp_camera_set_port_info(Camera*, GPPortInfo)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:345</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_set_port_info(x.mvmn.gphoto2.jna.Camera, x.mvmn.gphoto2.jna.Gphoto2Library.GPPortInfo)} and {@link #gp_camera_set_port_info(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_camera_set_port_info(Camera camera, Pointer info);
	/**
	 * Original signature : <code>int gp_camera_set_port_info(Camera*, GPPortInfo)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:345</i>
	 */
	int gp_camera_set_port_info(Camera camera, Gphoto2Library.GPPortInfo info);
	/**
	 * Original signature : <code>int gp_camera_get_port_info(Camera*, GPPortInfo*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:346</i><br>
	 * @deprecated use the safer method {@link #gp_camera_get_port_info(x.mvmn.gphoto2.jna.Camera, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_get_port_info(Camera camera, Pointer info);
	/**
	 * Original signature : <code>int gp_camera_get_port_info(Camera*, GPPortInfo*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:346</i>
	 */
	int gp_camera_get_port_info(Camera camera, PointerByReference info);
	/**
	 * \name camera speed<br>
	 * You normally don't use that. If you do, you prevent the camera driver<br>
	 * from selecting the optimal speed.<br>
	 * @{<br>
	 * Original signature : <code>int gp_camera_set_port_speed(Camera*, int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:359</i>
	 */
	int gp_camera_set_port_speed(Camera camera, int speed);
	/**
	 * Original signature : <code>int gp_camera_get_port_speed(Camera*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:360</i>
	 */
	int gp_camera_get_port_speed(Camera camera);
	/**
	 * \name Initialization<br>
	 * @{<br>
	 * Original signature : <code>int gp_camera_autodetect(CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:368</i><br>
	 * @deprecated use the safer method {@link #gp_camera_autodetect(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_autodetect(Pointer list, Pointer context);
	/**
	 * \name Initialization<br>
	 * @{<br>
	 * Original signature : <code>int gp_camera_autodetect(CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:368</i>
	 */
	int gp_camera_autodetect(PointerByReference list, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_init(Camera*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:369</i><br>
	 * @deprecated use the safer method {@link #gp_camera_init(x.mvmn.gphoto2.jna.Camera, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_init(Camera camera, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_init(Camera*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:369</i>
	 */
	int gp_camera_init(Camera camera, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_exit(Camera*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:370</i><br>
	 * @deprecated use the safer method {@link #gp_camera_exit(x.mvmn.gphoto2.jna.Camera, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_exit(Camera camera, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_exit(Camera*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:370</i>
	 */
	int gp_camera_exit(Camera camera, PointerByReference context);
	/**
	 * \name Operations on cameras<br>
	 * @{<br>
	 * Original signature : <code>int gp_camera_ref(Camera*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:379</i>
	 */
	int gp_camera_ref(Camera camera);
	/**
	 * Original signature : <code>int gp_camera_unref(Camera*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:380</i>
	 */
	int gp_camera_unref(Camera camera);
	/**
	 * Original signature : <code>int gp_camera_free(Camera*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:381</i>
	 */
	int gp_camera_free(Camera camera);
	/**
	 * Original signature : <code>int gp_camera_get_config(Camera*, CameraWidget**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:383</i><br>
	 * @deprecated use the safer method {@link #gp_camera_get_config(x.mvmn.gphoto2.jna.Camera, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_get_config(Camera camera, PointerByReference window, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_get_config(Camera*, CameraWidget**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:383</i>
	 */
	int gp_camera_get_config(Camera camera, PointerByReference window, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_list_config(Camera*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:385</i><br>
	 * @deprecated use the safer method {@link #gp_camera_list_config(x.mvmn.gphoto2.jna.Camera, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_list_config(Camera camera, Pointer list, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_list_config(Camera*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:385</i>
	 */
	int gp_camera_list_config(Camera camera, PointerByReference list, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_get_single_config(Camera*, const char*, CameraWidget**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:387</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_get_single_config(x.mvmn.gphoto2.jna.Camera, java.lang.String, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_get_single_config(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_get_single_config(Camera camera, Pointer name, PointerByReference widget, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_get_single_config(Camera*, const char*, CameraWidget**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:387</i>
	 */
	int gp_camera_get_single_config(Camera camera, String name, PointerByReference widget, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_get_single_config(Camera*, const char*, CameraWidget**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:387</i>
	 */
	int gp_camera_get_single_config(Camera camera, Pointer name, PointerByReference widget, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_set_config(Camera*, CameraWidget*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:389</i><br>
	 * @deprecated use the safer method {@link #gp_camera_set_config(x.mvmn.gphoto2.jna.Camera, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_set_config(Camera camera, Pointer window, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_set_config(Camera*, CameraWidget*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:389</i>
	 */
	int gp_camera_set_config(Camera camera, PointerByReference window, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_set_single_config(Camera*, const char*, CameraWidget*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:391</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_set_single_config(x.mvmn.gphoto2.jna.Camera, java.lang.String, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_set_single_config(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_set_single_config(Camera camera, Pointer name, Pointer widget, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_set_single_config(Camera*, const char*, CameraWidget*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:391</i>
	 */
	int gp_camera_set_single_config(Camera camera, String name, PointerByReference widget, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_set_single_config(Camera*, const char*, CameraWidget*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:391</i>
	 */
	int gp_camera_set_single_config(Camera camera, Pointer name, PointerByReference widget, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_get_summary(Camera*, CameraText*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:393</i><br>
	 * @deprecated use the safer method {@link #gp_camera_get_summary(x.mvmn.gphoto2.jna.Camera, x.mvmn.gphoto2.jna.CameraText, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_get_summary(Camera camera, CameraText summary, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_get_summary(Camera*, CameraText*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:393</i>
	 */
	int gp_camera_get_summary(Camera camera, CameraText summary, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_get_manual(Camera*, CameraText*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:395</i><br>
	 * @deprecated use the safer method {@link #gp_camera_get_manual(x.mvmn.gphoto2.jna.Camera, x.mvmn.gphoto2.jna.CameraText, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_get_manual(Camera camera, CameraText manual, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_get_manual(Camera*, CameraText*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:395</i>
	 */
	int gp_camera_get_manual(Camera camera, CameraText manual, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_get_about(Camera*, CameraText*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:397</i><br>
	 * @deprecated use the safer method {@link #gp_camera_get_about(x.mvmn.gphoto2.jna.Camera, x.mvmn.gphoto2.jna.CameraText, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_get_about(Camera camera, CameraText about, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_get_about(Camera*, CameraText*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:397</i>
	 */
	int gp_camera_get_about(Camera camera, CameraText about, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_capture(Camera*, CameraCaptureType, CameraFilePath*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:399</i><br>
	 * @deprecated use the safer method {@link #gp_camera_capture(x.mvmn.gphoto2.jna.Camera, int, x.mvmn.gphoto2.jna.CameraFilePath, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_capture(Camera camera, int type, CameraFilePath path, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_capture(Camera*, CameraCaptureType, CameraFilePath*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:399</i>
	 */
	int gp_camera_capture(Camera camera, int type, CameraFilePath path, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_trigger_capture(Camera*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:401</i><br>
	 * @deprecated use the safer method {@link #gp_camera_trigger_capture(x.mvmn.gphoto2.jna.Camera, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_trigger_capture(Camera camera, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_trigger_capture(Camera*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:401</i>
	 */
	int gp_camera_trigger_capture(Camera camera, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_capture_preview(Camera*, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:402</i><br>
	 * @deprecated use the safer method {@link #gp_camera_capture_preview(x.mvmn.gphoto2.jna.Camera, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_capture_preview(Camera camera, Pointer file, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_capture_preview(Camera*, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:402</i>
	 */
	int gp_camera_capture_preview(Camera camera, PointerByReference file, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_wait_for_event(Camera*, int, CameraEventType*, void**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:404</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_wait_for_event(x.mvmn.gphoto2.jna.Camera, int, java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_wait_for_event(x.mvmn.gphoto2.jna.Camera, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_wait_for_event(Camera camera, int timeout, IntByReference eventtype, PointerByReference eventdata, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_wait_for_event(Camera*, int, CameraEventType*, void**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:404</i>
	 */
	int gp_camera_wait_for_event(Camera camera, int timeout, IntBuffer eventtype, PointerByReference eventdata, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_wait_for_event(Camera*, int, CameraEventType*, void**, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:404</i>
	 */
	int gp_camera_wait_for_event(Camera camera, int timeout, IntByReference eventtype, PointerByReference eventdata, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_get_storageinfo(Camera*, CameraStorageInformation**, int*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:408</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_get_storageinfo(x.mvmn.gphoto2.jna.Camera, x.mvmn.gphoto2.jna.CameraStorageInformation.ByReference[], java.nio.IntBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_get_storageinfo(x.mvmn.gphoto2.jna.Camera, x.mvmn.gphoto2.jna.CameraStorageInformation.ByReference[], com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_get_storageinfo(Camera camera, PointerByReference CameraStorageInformationPtrPtr1, IntByReference intPtr1, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_get_storageinfo(Camera*, CameraStorageInformation**, int*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:408</i>
	 */
	int gp_camera_get_storageinfo(Camera camera, x.mvmn.gphoto2.jna.CameraStorageInformation.ByReference CameraStorageInformationPtrPtr1[], IntBuffer intPtr1, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_get_storageinfo(Camera*, CameraStorageInformation**, int*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:408</i>
	 */
	int gp_camera_get_storageinfo(Camera camera, x.mvmn.gphoto2.jna.CameraStorageInformation.ByReference CameraStorageInformationPtrPtr1[], IntByReference intPtr1, PointerByReference context);
	/**
	 * \name Operations on folders<br>
	 * @{<br>
	 * Original signature : <code>int gp_camera_folder_list_files(Camera*, const char*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:417</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_folder_list_files(x.mvmn.gphoto2.jna.Camera, java.lang.String, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_folder_list_files(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_folder_list_files(Camera camera, Pointer folder, Pointer list, Pointer context);
	/**
	 * \name Operations on folders<br>
	 * @{<br>
	 * Original signature : <code>int gp_camera_folder_list_files(Camera*, const char*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:417</i>
	 */
	int gp_camera_folder_list_files(Camera camera, String folder, PointerByReference list, PointerByReference context);
	/**
	 * \name Operations on folders<br>
	 * @{<br>
	 * Original signature : <code>int gp_camera_folder_list_files(Camera*, const char*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:417</i>
	 */
	int gp_camera_folder_list_files(Camera camera, Pointer folder, PointerByReference list, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_folder_list_folders(Camera*, const char*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:419</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_folder_list_folders(x.mvmn.gphoto2.jna.Camera, java.lang.String, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_folder_list_folders(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_folder_list_folders(Camera camera, Pointer folder, Pointer list, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_folder_list_folders(Camera*, const char*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:419</i>
	 */
	int gp_camera_folder_list_folders(Camera camera, String folder, PointerByReference list, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_folder_list_folders(Camera*, const char*, CameraList*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:419</i>
	 */
	int gp_camera_folder_list_folders(Camera camera, Pointer folder, PointerByReference list, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_folder_delete_all(Camera*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:421</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_folder_delete_all(x.mvmn.gphoto2.jna.Camera, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_folder_delete_all(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_folder_delete_all(Camera camera, Pointer folder, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_folder_delete_all(Camera*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:421</i>
	 */
	int gp_camera_folder_delete_all(Camera camera, String folder, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_folder_delete_all(Camera*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:421</i>
	 */
	int gp_camera_folder_delete_all(Camera camera, Pointer folder, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_folder_put_file(Camera*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:423</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_folder_put_file(x.mvmn.gphoto2.jna.Camera, java.lang.String, java.lang.String, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_folder_put_file(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_folder_put_file(Camera camera, Pointer folder, Pointer filename, int type, Pointer file, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_folder_put_file(Camera*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:423</i>
	 */
	int gp_camera_folder_put_file(Camera camera, String folder, String filename, int type, PointerByReference file, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_folder_put_file(Camera*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:423</i>
	 */
	int gp_camera_folder_put_file(Camera camera, Pointer folder, Pointer filename, int type, PointerByReference file, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_folder_make_dir(Camera*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:427</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_folder_make_dir(x.mvmn.gphoto2.jna.Camera, java.lang.String, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_folder_make_dir(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_folder_make_dir(Camera camera, Pointer folder, Pointer name, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_folder_make_dir(Camera*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:427</i>
	 */
	int gp_camera_folder_make_dir(Camera camera, String folder, String name, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_folder_make_dir(Camera*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:427</i>
	 */
	int gp_camera_folder_make_dir(Camera camera, Pointer folder, Pointer name, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_folder_remove_dir(Camera*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:429</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_folder_remove_dir(x.mvmn.gphoto2.jna.Camera, java.lang.String, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_folder_remove_dir(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_folder_remove_dir(Camera camera, Pointer folder, Pointer name, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_folder_remove_dir(Camera*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:429</i>
	 */
	int gp_camera_folder_remove_dir(Camera camera, String folder, String name, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_folder_remove_dir(Camera*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:429</i>
	 */
	int gp_camera_folder_remove_dir(Camera camera, Pointer folder, Pointer name, PointerByReference context);
	/**
	 * \name Operations on files<br>
	 * @{<br>
	 * Original signature : <code>int gp_camera_file_get_info(Camera*, const char*, const char*, CameraFileInfo*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:437</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_file_get_info(x.mvmn.gphoto2.jna.Camera, java.lang.String, java.lang.String, x.mvmn.gphoto2.jna.CameraFileInfo, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_file_get_info(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer, com.sun.jna.Pointer, x.mvmn.gphoto2.jna.CameraFileInfo, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_file_get_info(Camera camera, Pointer folder, Pointer file, CameraFileInfo info, Pointer context);
	/**
	 * \name Operations on files<br>
	 * @{<br>
	 * Original signature : <code>int gp_camera_file_get_info(Camera*, const char*, const char*, CameraFileInfo*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:437</i>
	 */
	int gp_camera_file_get_info(Camera camera, String folder, String file, CameraFileInfo info, PointerByReference context);
	/**
	 * \name Operations on files<br>
	 * @{<br>
	 * Original signature : <code>int gp_camera_file_get_info(Camera*, const char*, const char*, CameraFileInfo*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:437</i>
	 */
	int gp_camera_file_get_info(Camera camera, Pointer folder, Pointer file, CameraFileInfo info, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_file_set_info(Camera*, const char*, const char*, CameraFileInfo, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:440</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_file_set_info(x.mvmn.gphoto2.jna.Camera, java.lang.String, java.lang.String, x.mvmn.gphoto2.jna.CameraFileInfo.ByValue, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_file_set_info(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer, com.sun.jna.Pointer, x.mvmn.gphoto2.jna.CameraFileInfo.ByValue, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_file_set_info(Camera camera, Pointer folder, Pointer file, CameraFileInfo.ByValue info, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_file_set_info(Camera*, const char*, const char*, CameraFileInfo, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:440</i>
	 */
	int gp_camera_file_set_info(Camera camera, String folder, String file, CameraFileInfo.ByValue info, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_file_set_info(Camera*, const char*, const char*, CameraFileInfo, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:440</i>
	 */
	int gp_camera_file_set_info(Camera camera, Pointer folder, Pointer file, CameraFileInfo.ByValue info, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_file_get(Camera*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:443</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_file_get(x.mvmn.gphoto2.jna.Camera, java.lang.String, java.lang.String, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_file_get(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_file_get(Camera camera, Pointer folder, Pointer file, int type, Pointer camera_file, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_file_get(Camera*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:443</i>
	 */
	int gp_camera_file_get(Camera camera, String folder, String file, int type, PointerByReference camera_file, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_file_get(Camera*, const char*, const char*, CameraFileType, CameraFile*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:443</i>
	 */
	int gp_camera_file_get(Camera camera, Pointer folder, Pointer file, int type, PointerByReference camera_file, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_file_read(Camera*, const char*, const char*, CameraFileType, uint64_t, char*, uint64_t*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:446</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_file_read(x.mvmn.gphoto2.jna.Camera, java.lang.String, java.lang.String, int, long, java.nio.ByteBuffer, java.nio.LongBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_file_read(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer, com.sun.jna.Pointer, int, long, com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_file_read(Camera camera, Pointer folder, Pointer file, int type, long offset, Pointer buf, LongByReference size, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_file_read(Camera*, const char*, const char*, CameraFileType, uint64_t, char*, uint64_t*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:446</i>
	 */
	int gp_camera_file_read(Camera camera, String folder, String file, int type, long offset, ByteBuffer buf, LongBuffer size, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_file_read(Camera*, const char*, const char*, CameraFileType, uint64_t, char*, uint64_t*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:446</i>
	 */
	int gp_camera_file_read(Camera camera, Pointer folder, Pointer file, int type, long offset, Pointer buf, LongByReference size, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_file_delete(Camera*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:450</i><br>
	 * @deprecated use the safer methods {@link #gp_camera_file_delete(x.mvmn.gphoto2.jna.Camera, java.lang.String, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #gp_camera_file_delete(x.mvmn.gphoto2.jna.Camera, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gp_camera_file_delete(Camera camera, Pointer folder, Pointer file, Pointer context);
	/**
	 * Original signature : <code>int gp_camera_file_delete(Camera*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:450</i>
	 */
	int gp_camera_file_delete(Camera camera, String folder, String file, PointerByReference context);
	/**
	 * Original signature : <code>int gp_camera_file_delete(Camera*, const char*, const char*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:450</i>
	 */
	int gp_camera_file_delete(Camera camera, Pointer folder, Pointer file, PointerByReference context);
	/**
	 * Original signature : <code>void gp_camera_set_timeout_funcs(Camera*, CameraTimeoutStartFunc, CameraTimeoutStopFunc, void*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:467</i>
	 */
	void gp_camera_set_timeout_funcs(Camera camera, Gphoto2Library.CameraTimeoutStartFunc start_func, Gphoto2Library.CameraTimeoutStopFunc stop_func, Pointer data);
	/**
	 * Original signature : <code>int gp_camera_start_timeout(Camera*, unsigned int, CameraTimeoutFunc)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:471</i>
	 */
	int gp_camera_start_timeout(Camera camera, int timeout, Gphoto2Library.CameraTimeoutFunc func);
	/**
	 * Original signature : <code>void gp_camera_stop_timeout(Camera*, unsigned int)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-camera.h:473</i>
	 */
	void gp_camera_stop_timeout(Camera camera, int id);
	/**
	 * If you want to write a camera library, you need to implement<br>
	 * the following three functions. Everything else should be declared<br>
	 * as static.<br>
	 * Original signature : <code>int camera_id(CameraText*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-library.h:71</i>
	 */
	int camera_id(CameraText id);
	/**
	 * Original signature : <code>int camera_abilities(CameraAbilitiesList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-library.h:72</i><br>
	 * @deprecated use the safer method {@link #camera_abilities(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int camera_abilities(Pointer list);
	/**
	 * Original signature : <code>int camera_abilities(CameraAbilitiesList*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-library.h:72</i>
	 */
	int camera_abilities(PointerByReference list);
	/**
	 * Original signature : <code>int camera_init(Camera*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-library.h:73</i><br>
	 * @deprecated use the safer method {@link #camera_init(x.mvmn.gphoto2.jna.Camera, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int camera_init(Camera camera, Pointer context);
	/**
	 * Original signature : <code>int camera_init(Camera*, GPContext*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-library.h:73</i>
	 */
	int camera_init(Camera camera, PointerByReference context);
	/**
	 * Original signature : <code>int gp_setting_set(char*, char*, char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-setting.h:31</i><br>
	 * @deprecated use the safer methods {@link #gp_setting_set(java.nio.ByteBuffer, java.nio.ByteBuffer, java.nio.ByteBuffer)} and {@link #gp_setting_set(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_setting_set(Pointer id, Pointer key, Pointer value);
	/**
	 * Original signature : <code>int gp_setting_set(char*, char*, char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-setting.h:31</i>
	 */
	int gp_setting_set(ByteBuffer id, ByteBuffer key, ByteBuffer value);
	/**
	 * Original signature : <code>int gp_setting_get(char*, char*, char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-setting.h:32</i><br>
	 * @deprecated use the safer methods {@link #gp_setting_get(java.nio.ByteBuffer, java.nio.ByteBuffer, java.nio.ByteBuffer)} and {@link #gp_setting_get(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int gp_setting_get(Pointer id, Pointer key, Pointer value);
	/**
	 * Original signature : <code>int gp_setting_get(char*, char*, char*)</code><br>
	 * <i>native declaration : gphoto2/gphoto2-setting.h:32</i>
	 */
	int gp_setting_get(ByteBuffer id, ByteBuffer key, ByteBuffer value);
	public static class CameraWidget extends PointerType {
		public CameraWidget(Pointer address) {
			super(address);
		}
		public CameraWidget() {
			super();
		}
	};
	public static class GPPortPrivateCore extends PointerType {
		public GPPortPrivateCore(Pointer address) {
			super(address);
		}
		public GPPortPrivateCore() {
			super();
		}
	};
	public static class CameraAbilitiesList extends PointerType {
		public CameraAbilitiesList(Pointer address) {
			super(address);
		}
		public CameraAbilitiesList() {
			super();
		}
	};
	public static class CameraPrivateCore extends PointerType {
		public CameraPrivateCore(Pointer address) {
			super(address);
		}
		public CameraPrivateCore() {
			super();
		}
	};
	public static class GPPortInfo extends PointerType {
		public GPPortInfo(Pointer address) {
			super(address);
		}
		public GPPortInfo() {
			super();
		}
	};
	public static class CameraFilesystem extends PointerType {
		public CameraFilesystem(Pointer address) {
			super(address);
		}
		public CameraFilesystem() {
			super();
		}
	};
	public static class CameraList extends PointerType {
		public CameraList(Pointer address) {
			super(address);
		}
		public CameraList() {
			super();
		}
	};
	public static class GPPortInfoList extends PointerType {
		public GPPortInfoList(Pointer address) {
			super(address);
		}
		public GPPortInfoList() {
			super();
		}
	};
	public static class CameraPrivateLibrary extends PointerType {
		public CameraPrivateLibrary(Pointer address) {
			super(address);
		}
		public CameraPrivateLibrary() {
			super();
		}
	};
	public static class CameraFile extends PointerType {
		public CameraFile(Pointer address) {
			super(address);
		}
		public CameraFile() {
			super();
		}
	};
	public static class GPPortPrivateLibrary extends PointerType {
		public GPPortPrivateLibrary(Pointer address) {
			super(address);
		}
		public GPPortPrivateLibrary() {
			super();
		}
	};
	public static class GPContext extends PointerType {
		public GPContext(Pointer address) {
			super(address);
		}
		public GPContext() {
			super();
		}
	};
}
