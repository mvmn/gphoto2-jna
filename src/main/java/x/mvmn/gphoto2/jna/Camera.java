package x.mvmn.gphoto2.jna;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.PointerByReference;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : gphoto2/gphoto2-camera.h:322</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class Camera extends Structure {
	/** C type : GPPort* */
	public x.mvmn.gphoto2.jna.GPPort.ByReference port;
	/** C type : CameraFilesystem* */
	public PointerByReference fs;
	/** C type : CameraFunctions* */
	public x.mvmn.gphoto2.jna.CameraFunctions.ByReference functions;
	/**
	 * < Private data of camera libraries.<br>
	 * C type : CameraPrivateLibrary*
	 */
	public PointerByReference pl;
	/**
	 * < Private data of the core of gphoto2.<br>
	 * C type : CameraPrivateCore*
	 */
	public PointerByReference pc;
	public Camera() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("port", "fs", "functions", "pl", "pc");
	}
	/**
	 * @param port C type : GPPort*<br>
	 * @param fs C type : CameraFilesystem*<br>
	 * @param functions C type : CameraFunctions*<br>
	 * @param pl < Private data of camera libraries.<br>
	 * C type : CameraPrivateLibrary*<br>
	 * @param pc < Private data of the core of gphoto2.<br>
	 * C type : CameraPrivateCore*
	 */
	public Camera(x.mvmn.gphoto2.jna.GPPort.ByReference port, PointerByReference fs, x.mvmn.gphoto2.jna.CameraFunctions.ByReference functions, PointerByReference pl, PointerByReference pc) {
		super();
		this.port = port;
		this.fs = fs;
		this.functions = functions;
		this.pl = pl;
		this.pc = pc;
	}
	public Camera(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends Camera implements Structure.ByReference {
		
	};
	public static class ByValue extends Camera implements Structure.ByValue {
		
	};
}
