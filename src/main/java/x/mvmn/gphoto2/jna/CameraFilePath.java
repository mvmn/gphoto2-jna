package x.mvmn.gphoto2.jna;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : gphoto2/gphoto2-camera.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CameraFilePath extends Structure {
	/**
	 * < \brief Name of the captured file.<br>
	 * C type : char[128]
	 */
	public byte[] name = new byte[128];
	/**
	 * < \brief Name of the folder of the captured file.<br>
	 * C type : char[1024]
	 */
	public byte[] folder = new byte[1024];
	public CameraFilePath() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("name", "folder");
	}
	/**
	 * @param name < \brief Name of the captured file.<br>
	 * C type : char[128]<br>
	 * @param folder < \brief Name of the folder of the captured file.<br>
	 * C type : char[1024]
	 */
	public CameraFilePath(byte name[], byte folder[]) {
		super();
		if ((name.length != this.name.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.name = name;
		if ((folder.length != this.folder.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.folder = folder;
	}
	public CameraFilePath(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends CameraFilePath implements Structure.ByReference {
		
	};
	public static class ByValue extends CameraFilePath implements Structure.ByValue {
		
	};
}
