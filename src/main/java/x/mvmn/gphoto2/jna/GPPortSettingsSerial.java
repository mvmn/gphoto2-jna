package x.mvmn.gphoto2.jna;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : gphoto2/gphoto2-port.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class GPPortSettingsSerial extends Structure {
	/**
	 * < The portname (/dev/ttyX)<br>
	 * C type : char[128]
	 */
	public byte[] port = new byte[128];
	/** < The baudrate of the device. */
	public int speed;
	/** < How many bits data. */
	public int bits;
	/**
	 * @see GPPortSerialParity<br>
	 * < parity data, see GP_PORT_SERIAL_PARITY_<br>
	 * defines<br>
	 * C type : GPPortSerialParity
	 */
	public int parity;
	/** < How many stop bits are used. */
	public int stopbits;
	public GPPortSettingsSerial() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("port", "speed", "bits", "parity", "stopbits");
	}
	/**
	 * @param port < The portname (/dev/ttyX)<br>
	 * C type : char[128]<br>
	 * @param speed < The baudrate of the device.<br>
	 * @param bits < How many bits data.<br>
	 * @param parity @see GPPortSerialParity<br>
	 * < parity data, see GP_PORT_SERIAL_PARITY_<br>
	 * defines<br>
	 * C type : GPPortSerialParity<br>
	 * @param stopbits < How many stop bits are used.
	 */
	public GPPortSettingsSerial(byte port[], int speed, int bits, int parity, int stopbits) {
		super();
		if ((port.length != this.port.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.port = port;
		this.speed = speed;
		this.bits = bits;
		this.parity = parity;
		this.stopbits = stopbits;
	}
	public GPPortSettingsSerial(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends GPPortSettingsSerial implements Structure.ByReference {
		
	};
	public static class ByValue extends GPPortSettingsSerial implements Structure.ByValue {
		
	};
}
